# Plotting Trends {#sec-chapter}

```{r}
#| echo: false
#| message: false
#| include: false

suppressWarnings(suppressMessages(source("_common.R")))
```

## Single Variables

### Points

Plotting the data points is a good starting point for viewing trends.

```{r}
#| label: milk_ca_point
#| echo: false
#| fig-height: 5
#| fig-width: 6
#| fig-align: center

ggplot(milk_ca,
    aes(x = year, y = milk_produced)) +
    geom_point(color = 'steelblue', size = 2) +
    theme_half_open(font_size = 18) +
    labs(x = 'Year',
         y = 'Milk produced (billion lbs)',
         title = 'Milk production in California')
```

### Points + line

Adding lines between the points helps see the overall trend.

How to: **Points + line**

Be sure to draw the line first, then overlay the points
```{r}
#| label: milk_ca_point_line
#| fig-height: 5
#| fig-width: 6
#| fig-align: center

ggplot(milk_ca,
    aes(x = year, y = milk_produced)) +
    geom_line(color = 'steelblue', size = 0.5) +
    geom_point(color = 'steelblue', size = 2) +
    theme_half_open(font_size = 18) +
    labs(x = 'Year',
         y = 'Milk produced (billion lbs)',
         title = 'Milk production in California')
```

### Line

Omitting the points emphasizes the overall trend.

```{r}
#| label: milk_ca_line
#| #| echo: false
#| fig-height: 5
#| fig-width: 6
#| fig-align: center

ggplot(milk_ca,
    aes(x = year, y = milk_produced)) +
    geom_line(color = 'steelblue', size = 1) +
    theme_half_open(font_size = 18) +
    labs(x = 'Year',
         y = 'Milk produced (billion lbs)',
         title = 'Milk production in California')
```

### Line + area

Filling area below line emphasizes cumulative over time.
(y-axis should start at 0)

```{r}
#| label: milk_ca_line_area
#| echo: false
#| fig-height: 5
#| fig-width: 6
#| fig-align: center

ggplot(milk_ca,
    aes(x = year, y = milk_produced)) +
    geom_area(fill = 'steelblue', alpha = 0.5) +
    geom_line(color = 'steelblue', size = 1) +
    scale_y_continuous(
      expand = expansion(mult = c(0, 0.05))) +
    theme_half_open(font_size = 18) +
    labs(x = 'Year',
         y = 'Milk produced (billion lbs)',
         title = 'Milk production in California')
```


**If points are too sparse, a line can be misleading.**

```{r}
#| label: milk_ca_point_line_sparse1
#| echo: false
#| fig-height: 5
#| fig-width: 6
#| fig-align: center

ggplot(milk_ca_sparse,
       aes(x = year, y = milk_produced)) +
    geom_line(color = 'steelblue', size = 0.5) +
    geom_point(aes(color = yearColor), size = 2) +
    scale_color_manual(values = c('red', 'steelblue')) +
    theme_half_open(font_size = 18) +
    theme(legend.position = 'none') +
    labs(x = 'Year',
         y = 'Milk produced (billion lbs)',
         title = 'Milk production in California')
```

```{r}
#| label: milk_ca_point_line_sparse2
#| echo: false
#| fig-height: 5
#| fig-width: 6
#| fig-align: center

milk_ca_sparse %>%
    filter(yearColor == 'one') %>%
    ggplot(aes(x = year, y = milk_produced)) +
    geom_line(color = 'steelblue', size = 0.5) +
    geom_point(color = 'red', size = 2) +
    theme_half_open(font_size = 18) +
    labs(x = 'Year',
         y = 'Milk produced (billion lbs)',
         title = 'Milk production in California')
```

How to: **Line + area**

Likewise, draw the area first then overlay the line

```{r ref.label='milk_ca_line_area', echo=FALSE, fig.height=5, fig.width=6, fig.align='center'}
```

### Smoothed line

Adding a "smoothed" line shows a modeled representation of the overall trend.

```{r}
#| label: milk_ca_smooth
#| #| echo: false
#| fig-height: 5
#| fig-width: 6
#| fig-align: center

ggplot(milk_ca,
    aes(x = year, y = milk_produced)) +
    geom_smooth(color = 'steelblue', size = 1, se = FALSE) +
    theme_half_open(font_size = 18) +
    labs(x = 'Year',
         y = 'Milk produced (billion lbs)',
         title = 'Milk production in California')
```

### Smoothed line + points

Putting the smoothed line over the data points helps show whether **outliers** are driving the trend line.

How to: **Smoothed line + points**

Use `alpha` to make points slightly transparent

```{r}
#| label: milk_ca_smooth_points
#| echo: false
#| fig-height: 5
#| fig-width: 6
#| fig-align: center

ggplot(milk_ca,
    aes(x = year, y = milk_produced)) +
    geom_point(color = 'grey', size = 2, alpha = 0.9) +
    geom_smooth(color = 'steelblue', size = 1, se = FALSE) +
    theme_half_open(font_size = 18) +
    labs(x = 'Year',
         y = 'Milk produced (billion lbs)',
         title = 'Milk production in California')
```

### Bars

Bars are useful when emphasizing the **data points**<br>rather than the **slope between them**

```{r}
#| label: hotdog_bar_record
#| echo: false
#| fig-height: 5.5
#| fig-width: 6.5
#| fig-align: center

ggplot(hotdogs_mens) +
    geom_col(
      aes(x = Year, y = dogs, fill = record),
      width = 0.8, alpha = 0.9) +
    scale_fill_manual(values = c("grey", "sienna")) +
    scale_y_continuous(
      expand = expansion(mult = c(0, 0.05))) +
    theme_minimal_hgrid() +
    theme(legend.position = c(0.1, 0.65)) +
    labs(x = 'Year',
         y = 'Number of hot dogs & buns\nin 10 minutes',
         fill = 'Record\nbroken?',
         title = "Record-breaking wins in Nathan's hot dog\neating competition, men's division")
```

```{r}
#| label: hotdog_bar_winner
#| echo: false
#| fig-height: 5.5
#| fig-width: 6.5
#| fig-align: center

ggplot(hotdogs_mens) +
    geom_col(
      aes(x = Year, y = dogs, fill = Winner),
      width = 0.8, alpha = 0.9) +
    scale_y_continuous(
      expand = expansion(mult = c(0, 0.05))) +
    theme_minimal_hgrid() +
    theme(legend.position = c(0.1, 0.65)) +
    labs(x = 'Year',
         y = 'Number of hot dogs & buns\nin 10 minutes',
         fill = 'Winner',
         title = "Winner of Nathan's hot dog eating competition,\nmen's division")
```

## Multiple Variables

### Points and Lines

**With multiple categories, points & lines can get messy**

```{r}
#| label: milk_region_dot
#| echo: false
#| fig-height: 5
#| fig-width: 7.5
#| fig-align: center

ggplot(milk_region,
    aes(x = year, y = milk_produced,
        color = region)) +
    geom_point() +
    scale_color_manual(values = c(
        'sienna', 'forestgreen', 'dodgerblue', 'orange')) +
    theme_half_open(font_size = 18) +
    labs(x = 'Year',
         y = 'Milk produced (billion lbs)',
         color = 'Region',
         title = 'Milk production in four US regions')
```

```{r}
#| label: milk_region_dot_line
#| echo: false
#| fig-height: 5
#| fig-width: 7.5
#| fig-align: center

ggplot(milk_region,
    aes(x = year, y = milk_produced,
        color = region)) +
    geom_point() +
    geom_line() +
    scale_color_manual(values = c(
        'sienna', 'forestgreen', 'dodgerblue', 'orange')) +
    theme_half_open(font_size = 18) +
    labs(x = 'Year',
         y = 'Milk produced (billion lbs)',
         color = 'Region',
         title = 'Milk production in four US regions')
```

### Lines

**Better**: Lines alone makes distinguishing trends easier

```{r}
#| label: milk_region_line
#| echo: false
#| fig-height: 5
#| fig-width: 7.5
#| fig-align: center

ggplot(milk_region,
    aes(x = year, y = milk_produced,
        color = region)) +
    geom_line(size = 1) +
    scale_color_manual(values = c(
        'sienna', 'forestgreen', 'dodgerblue', 'orange')) +
    theme_half_open(font_size = 18) +
    labs(x = 'Year',
         y = 'Milk produced (billion lbs)',
         color = 'Region',
         title = 'Milk production in four US regions')
```

### Labeled Lines

**Even better**: Directly label lines to remove legend

```{r}
#| label: milk_region_line_label
#| echo: false
#| fig-height: 5
#| fig-width: 7.5
#| fig-align: center

ggplot(milk_region,
    aes(x = year, y = milk_produced,
        color = region)) +
    geom_line(size = 1) +
    geom_text_repel(
      data = milk_region %>%
        filter(year == max(year)),
      aes(label = region),
         hjust = 0, nudge_x = 1, direction = "y",
         size = 6, segment.color = NA) +
    scale_x_continuous(
      breaks = seq(1970, 2010, 10),
      expand = expansion(add = c(1, 13))) +
    scale_color_manual(values = c(
        'sienna', 'forestgreen', 'dodgerblue', 'orange')) +
    theme_half_open(font_size = 18) +
    theme(legend.position = 'none') +
    labs(x = 'Year',
         y = 'Milk produced (billion lbs)',
         title = 'Milk production in four US regions')
```

How to:<br>**Directly label lines**

Make the basic line chart first

```{r}
#| eval: false

# Format the data
milk_region <- milk_production %>%
  filter(region %in% c(
    'Pacific', 'Northeast', 'Lake States', 'Mountain')) %>%
  group_by(year, region) %>%
  summarise(milk_produced = sum(milk_produced)) %>%
  ungroup()

# Make the line chart
ggplot(milk_region,
  aes(x = year, y = milk_produced,
      color = region)) +
  geom_line(size = 1) +
  scale_color_manual(values = c(
    'sienna', 'forestgreen', 'dodgerblue', 'orange')) +
  theme_half_open(font_size = 18) +
  labs(
    x     = 'Year',
    y     = 'Milk produced (billion lbs)',
    color = 'Region',
    title = 'Milk production in four US regions')
```
```{r}
#| label: milk_region_line_label,
#| fig-height: 5
#| fig-width: 7.5
#| fig-align: center

# Format the data
milk_region <- milk_production %>%
  filter(region %in% c(
    'Pacific', 'Northeast', 'Lake States', 'Mountain')) %>%
  group_by(year, region) %>%
  summarise(milk_produced = sum(milk_produced)) %>%
  ungroup()

# Make the line plot
ggplot(milk_region,
  aes(x = year, y = milk_produced,
      color = region)) +
  geom_line(size = 1) +
  # Add labels
  geom_text_repel(
    data = milk_region %>%
      filter(year == max(year)),
    aes(label = region),
      hjust = 0, nudge_x = 1, direction = "y",
      size = 6, segment.color = NA) +
  # Create space for labels on right side
  scale_x_continuous(
    breaks = seq(1970, 2010, 10),
    expand = expansion(add = c(1, 13))) +
  scale_color_manual(values = c(
    'sienna', 'forestgreen', 'dodgerblue', 'orange')) +
  theme_half_open(font_size = 18) +
  # Remove legend
  theme(legend.position = 'none') +
  labs(x = 'Year',
       y = 'Milk produced (billion lbs)',
       title = 'Milk production in four US regions')
```

Alternative: **Embed the labels!**

```{r}
#| label: milk_region_line_label2
#| echo: false
#| fig-height: 5
#| fig-width: 7.5
#| fig-align: center

library(geomtextpath)

# Format the data
milk_production %>%
  filter(region %in% c(
    'Pacific', 'Northeast', 'Lake States', 'Mountain')) %>%
  group_by(year, region) %>%
  summarise(milk_produced = sum(milk_produced)) %>%
  ungroup() %>% 

# Make the line plot
  ggplot() +
  geom_textline(
    aes(
      x = year, y = milk_produced,
      color = region, label = region, group = region),
    size = 5, hjust = 0.15
  ) +
  scale_color_manual(values = c(
    'sienna', 'forestgreen', 'dodgerblue', 'orange')) +
  theme_half_open(font_size = 18) +
  # Remove legend
  theme(legend.position = 'none') +
  labs(x = 'Year',
       y = 'Milk produced (billion lbs)',
       title = 'Milk production in four US regions')
```

Use `{geomtextpath}` package

(see [this SO issue](https://stackoverflow.com/questions/29357612/plot-labels-at-ends-of-lines/60217854) for other strategies)

### Stacked Line/Area Chart

If your goal is to communicate the **overall / total** trend,consider a stacked area chart.

Highlights **regional** trends:

```{r}
#| label: internet_region_line_label
#| echo: false
#| fig-height: 5
#| fig-width: 7.5
#| fig-align: center

ggplot(internet_region_summary,
    aes(x = year, y = numUsers,
        color = region)) +
    geom_line(size = 1) +
    geom_text_repel(
      data = internet_region_summary %>%
        filter(year == max(year)),
      aes(label = region),
         hjust = "outward", direction = "y",
         nudge_x = 0.3, size = 4.5) +
    scale_x_continuous(
      breaks = seq(1990, 2015, 5),
      expand = expansion(add = c(1, 14))) +
    theme_half_open(font_size = 18) +
    theme(legend.position = 'none') +
    labs(x = 'Year', y = NULL,
         title = 'Number of internet users (billions)')
```

Highlights **overall / total** trend:

```{r}
#| label: internet_region_area
#| echo: false
#| fig-height: 5
#| fig-width: 8
#| fig-align: center

internet_region %>%
  mutate(numUsers = numUsers / 10^9) %>%
  ggplot() +
  geom_area(aes(x = year, y = numUsers,
        fill = region)) +
  # Nice colors from "viridis" library:
  scale_fill_viridis(discrete = TRUE) +
  # Sort the legend into 3 rows
  guides(fill = guide_legend(
    nrow = 3, byrow = FALSE)) +
  theme_minimal_grid(font_size = 15) +
  theme(legend.position = 'bottom') +
  labs(x = 'Year', y = NULL, fill = 'Region',
       title = 'Number of internet users (billions)')
```

How to: **Stacked area**

```{r ref.label='internet_region_area', echo=FALSE, fig.height=5, fig.width=8, fig.align='center'}
internet_region %>%
  mutate(numUsers = numUsers / 10^9) %>%
  ggplot() +
  geom_area(aes(x = year, y = numUsers,
        fill = region)) +
  # Nice colors from "viridis" library:
  scale_fill_viridis(discrete = TRUE) +
  # Sort the legend into 3 rows
  guides(fill = guide_legend(
    nrow = 3, byrow = FALSE)) +
  theme_minimal_grid(font_size = 15) +
  theme(legend.position = 'bottom') +
  labs(
    x = 'Year',
    y = NULL,
    fill = 'Region',
    title = 'Number of internet users (billions)')
```

### Lots of Categories: Average Line Overlay

If you have **lots** of categories:

**1) Plot all the data with the average highlighted**

Measles in **California**:

```{r}
#| label: measles_line_ca
#| echo: false
#| fig-height: 5
#| fig-width: 6
#| fig-align: center

ggplot(measles_ca) +
    geom_line(aes(x = year, y = rate)) +
    geom_vline(
        xintercept = 1963, col = 'blue',
        linetype = 'dashed') +
    annotate(
        'text', x = 1964, y = 70, hjust = 0,
        label = 'Vaccine introduced in 1964',
        color = 'blue') +
    labs(y = 'Cases per 10,000 people') +
    theme_bw()
```

Measles in **all 50 states**:

```{r}
#| label: measles_line_us
#| echo: false
#| fig-height: 5
#| fig-width: 6
#| fig-align: center

ggplot(measles) +
    geom_line(
        aes(x = year, y = rate, group = state),
        color = 'grey', alpha = 0.3) +
    geom_line(
        data = measles_us,
        aes(x = year, y = rate),
        size = 0.8) +
    geom_vline(
        xintercept = 1963, col = 'blue',
        linetype = 'dashed') +
    annotate(
        'text', x = 1945, y = 55, hjust = 0,
        label = 'US Mean') +
    annotate(
        'text', x = 1964, y = 150, hjust = 0,
        label = 'Vaccine introduced in 1964',
        color = 'blue') +
    labs(y = 'Cases per 10,000 people') +
    theme_bw()
```

How to: **Average line overlay**

Format the data

```{r}
# Format the data
measles <- us_diseases %>%
  filter(
    disease == 'Measles',
    !state %in% c("Hawaii", "Alaska")) %>%
  mutate(
    rate = (count / population) * 10000,
    state = fct_reorder(state, rate)) %>%
  # Compute annual mean rate across all states
  group_by(year) %>%
  mutate(
    mean_rate = sum(count) / sum(population) * 10000)
```

Make all the state lines in light grey color

```{r measles_states, fig.show='hide'}
ggplot(measles) +
    geom_line(aes(x = year, y = rate, group = state),
              color = 'grey', alpha = 0.3) +
    # Add reference line & label:
    geom_vline(xintercept = 1963, col = 'blue',
               linetype = 'dashed') +
    annotate('text', x = 1964, y = 150, hjust = 0,
             label = 'Vaccine introduced in 1964',
             color = 'blue') +
    theme_minimal_grid(font_size = 18) +
    labs(y = 'Cases per 10,000 people')
```

Now overlay the annual mean line

```{r, eval=FALSE}
ggplot(measles) +
  geom_line(
    aes(x = year, y = rate, group = state),
    color = 'grey', alpha = 0.3) +
  geom_line(
    aes(x = year, y = mean_rate), size = 0.8) +
  # Add US mean label
  annotate(
    'text', x = 1945, y = 55, hjust = 0,
    label = 'US Mean') +
  # Add reference line & label
  geom_vline(xintercept = 1963, col = 'blue',
             linetype = 'dashed') +
  annotate('text', x = 1964, y = 150, hjust = 0,
           label = 'Vaccine introduced in 1964',
           color = 'blue') +
  theme_minimal_grid(font_size = 18) +
  labs(y = 'Cases per 10,000 people')
```

```{r ref.label='measles_line_us', echo=FALSE, fig.height=5, fig.width=6, fig.align='center'}
```

### Lots of Categories: Heat Maps

**2) Plot all the data with a heat map**

```{r}
#| label: measles_heat_map
#| echo: false
#| fig-height: 6
#| fig-width: 8
#| fig-align: center

ggplot(measles) +
    geom_tile(aes(x = year, y = state, fill = rate),
              color = 'grey80') +
    geom_vline(xintercept = 1963, col = 'blue') +
    annotate('text', x = 1964, y = 51, hjust = 0,
             label = 'Vaccine introduced in 1964',
             color = 'blue') +
    scale_x_continuous(expand = c(0, 0)) +
    scale_fill_viridis(option = 'inferno', direction = -1,
                       trans = 'sqrt') +
    guides(fill = guide_colorbar(title.position = 'top',
                                 reverse = TRUE)) +
    coord_cartesian(clip = 'off') +
    theme_minimal() +
    theme(panel.grid = element_blank(),
          legend.position = 'bottom',
          text = element_text(size = 10)) +
    labs(x = '', y = '',
         fill = 'Cases per 10,000 people',
         title = 'Measles in the U.S.')
```


**Heatmaps are great for multiple divisions of time**

My activity on Github:

<center>
<img src="images/jhelvy_github.png" width=800>
</center>

Check out this heat map on [Traffic fatalities](https://flowingdata.com/2017/04/27/traffic-fatalities-when-and-where/)

## How to: **Heat map**

Create main grid with `geom_tile()`

```{r}
#| label: measles_grid
#| fig-height: 8
#| fig-width: 8

ggplot(measles) +
  geom_tile(
    aes(x = year, y = state, fill = rate),
    color = 'grey80') +
  # Add reference line & label
  geom_vline(
    xintercept = 1963, col = 'blue') +
  annotate(
    'text', x = 1964, y = 50.5, hjust = 0,
    label = 'Vaccine introduced in 1964',
    color = 'blue')
```

Adjust scales and adjust theme

```{r}
#| label: measles_heat_map_linear
#| fig-height: 7
#| fig-width: 8
#| fig-align: center

ggplot(measles) +
  geom_tile(aes(x = year, y = state, fill = rate),
    color = 'grey80') +
  # Add reference line & label
  geom_vline(xintercept = 1963, col = 'blue') +
  annotate(
    'text', x = 1964, y = 50.5, hjust = 0,
    label = 'Vaccine introduced in 1964',
    color = 'blue') +
  # Adjust scales
  scale_x_continuous(expand = c(0, 0)) +
  scale_fill_viridis(
    option = 'inferno', direction = -1) +
  # Adjust theme
  theme_minimal() +
  theme(
    panel.grid = element_blank(),
    legend.position = 'bottom',
    text = element_text(size = 10)) +
  coord_cartesian(clip = 'off') +
  labs(
    x = NULL, y = NULL,
    fill = 'Cases per 10,000 people',
    title = 'Measles')
```

Color scale is linear in this chart:

Adjust scales and adjust theme

```{r}
#| label: measles_heat_map_adjust
#| fig-height: 7
#| fig-width: 8
#| fig-align: center

ggplot(measles) +
  geom_tile(aes(x = year, y = state, fill = rate),
    color = 'grey80') +
  # Add reference line & label
  geom_vline(xintercept = 1963, col = 'blue') +
  annotate(
    'text', x = 1964, y = 50.5, hjust = 0,
    label = 'Vaccine introduced in 1964',
    color = 'blue') +
  # Adjust scales
  scale_x_continuous(expand = c(0, 0)) +
  scale_fill_viridis(
    option = 'inferno', direction = -1,
    trans = 'sqrt') +
  # Modify legend color bar
  guides(fill = guide_colorbar(
      title.position = 'top', reverse = TRUE)) +
  # Adjust theme
  theme_minimal() +
  theme(
    panel.grid = element_blank(),
    legend.position = 'bottom',
    text = element_text(size = 10)) +
  coord_cartesian(clip = 'off') +
  labs(
    x = NULL, y = NULL,
    fill = 'Cases per 10,000 people',
    title = 'Measles')
```

Non-linear color scale helps with large variations:

### Two Additional Examples

**Two other examples for showing change across multiple categories**

Seasonal chart:

<center>
<img src="images/seasonal_chart.png" width=700>
</center>

Source: http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html#Seasonal%20Plot

Sankey chart:

<center>
<img src="images/energy_sankey.png" width=800>
</center>

Source: https://flowcharts.llnl.gov/

Would you consider purchasing an electric car?

<center>
<img src="images/bevSankey.png" width=700>
</center>

Roberson, Laura A.  & Helveston, J.P. (2020) "Electric vehicle adoption: can short experiences lead to big change?," Environmental Research Letters. 15(0940c3).<br>Made using the [ggforce](https://www.data-imaginist.com/2019/the-ggforce-awakens-again/) package
