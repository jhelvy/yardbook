[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Yet Another R Dataviz Book",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nSome text here",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1¬† Introduction",
    "section": "",
    "text": "This is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.\n\n1 + 1\n\n#&gt; [1] 2",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "part_1.html",
    "href": "part_1.html",
    "title": "Getting Started",
    "section": "",
    "text": "Getting Started\ntext",
    "crumbs": [
      "Getting Started"
    ]
  },
  {
    "objectID": "quarto_ch_2.html",
    "href": "quarto_ch_2.html",
    "title": "2¬† Quarto Basics",
    "section": "",
    "text": "2.1 Working with Quarto\nQuarto is a multilingual version of RMarkdown built on Pandoc that allows us to seamlessly combine text and code to create dynamic outputs. Like RMarkdown, it utilizes Knittr to render outputs in the form of documents, web pages, and more.\nUse R Projects (.Rproj files) to organize your analysis - don‚Äôt double-click .R files!",
    "crumbs": [
      "Getting Started",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Quarto Basics</span>"
    ]
  },
  {
    "objectID": "quarto_ch_2.html#working-with-quarto",
    "href": "quarto_ch_2.html#working-with-quarto",
    "title": "2¬† Quarto Basics",
    "section": "",
    "text": "Render to multiple outputs\nPDF uses LaTeX:\n\n---\ntitle: Your title\nauthor: Author name\nformat: pdf \n---\n\nIf you don‚Äôt have LaTeX on your computer, install tinytex in R:\n\ntinytex::install_tinytex()\n\nMicrosoft Word:\n\n---\ntitle: Your title\nauthor: Author name\nformat: docx\n---",
    "crumbs": [
      "Getting Started",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Quarto Basics</span>"
    ]
  },
  {
    "objectID": "quarto_ch_2.html#anatomy-of-a-quarto-markdown-document",
    "href": "quarto_ch_2.html#anatomy-of-a-quarto-markdown-document",
    "title": "2¬† Quarto Basics",
    "section": "2.2 Anatomy of a Quarto Markdown Document",
    "text": "2.2 Anatomy of a Quarto Markdown Document\nA Quarto Markdown document (.qmd) has three main parts:\n\nHeader\nMarkdown text\nR code\n\n\nHeader\nDefine overall document options in the header\n\n---\ntitle: Your title\nauthor: Author name\nformat: html\n---\n\nAdd table of contents, change theme\n\n---\ntitle: Your title\nauthor: Author name\ntoc: true \nformat:\n  html:\n    theme: united\n---\n\n\n\nMarkdown Text\nThis\n# HEADER 1\n\n## HEADER 2\n\n### HEADER 3\n\n#### HEADER 4\n\n##### HEADER 5\n\n###### HEADER 6\nGives us this\n\n\nType this‚Ä¶\n\nnormal text\n_italic text_\n*italic text*\n**bold text**\n***bold italic text***\n~~strikethrough~~\n`code text`\n\n..to get this\n\nnormal text\nitalic text\nitalic text\nbold text\nbold italic text\nstrikethrough\ncode text\n\nBullet list:\n\n- first item\n- second item\n- third item\n\n\nfirst item\nsecond item\nthird item\n\nNumbered list:\n\n1. first item\n2. second item\n3. third item\n\n\nfirst item\nsecond item\nthird item\n\nSimple url link to another site:\n\n[Download R](http://www.r-project.org/)\n\nDownload R\n\nDon‚Äôt want to use Markdown?\n\n\nUse Visual Mode!\n\n\n\n\n\n\nR Code\n\nInline R code\n\n`r insert code here`\n\n\nThe sum of 3 and 4 is `r 3 + 4`\n\nProduces this:\nThe sum of 3 and 4 is 7\n\n\nR Code chunks\n```{r}\ninsert code here\ninsert more code here\n```\nThis code chunk‚Ä¶\n```{r}\nlibrary(palmerpenguins)\n\nhead(penguins)\n```\n‚Ä¶will produce this when compiled:\n\n\n#&gt; # A tibble: 6 √ó 8\n#&gt;   species island   bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n#&gt;   &lt;fct&gt;   &lt;fct&gt;             &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n#&gt; 1 Adelie  Torgers‚Ä¶           39.1          18.7               181        3750\n#&gt; 2 Adelie  Torgers‚Ä¶           39.5          17.4               186        3800\n#&gt; 3 Adelie  Torgers‚Ä¶           40.3          18                 195        3250\n#&gt; 4 Adelie  Torgers‚Ä¶           NA            NA                  NA          NA\n#&gt; 5 Adelie  Torgers‚Ä¶           36.7          19.3               193        3450\n#&gt; 6 Adelie  Torgers‚Ä¶           39.3          20.6               190        3650\n#&gt; # ‚Ñπ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\n\n\nChunk Options\nControl what chunks output using options\nAll options here\n\n\n\n\n\n\n\n\n\nBy default, code chunks print code + output\n```{r}\n#| echo: false\n\ncat('hello world!')\n```\nPrints only output(doesn‚Äôt show code)\n\n\n#&gt; hello world!\n\n\n```{r}\n#| eval: false\n\ncat('hello world!')\n```\nPrints only code(doesn‚Äôt run the code)\n\ncat('hello world!')\n\n```{r}\n#| include: false\n\ncat('hello world!')\n```\nRuns, but doesn‚Äôt print anything\n\n\nA Global setup Chunk üåç\n```{r}\n#| label: setup\n#| include: false\n\nknitr::opts_chunk$set(\n    warning = FALSE,\n    message = FALSE,\n    fig.path = \"figs/\",\n    fig.width = 7.252,\n    fig.height = 4,\n    comment = \"#&gt;\",\n    fig.retina = 3\n)\n```\n\nTypically the first chunk\nAll following chunks will use these options (i.e., sets global chunk options)\nYou can (and should) use individual chunk options too\nOften where we load libraries, etc.",
    "crumbs": [
      "Getting Started",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Quarto Basics</span>"
    ]
  },
  {
    "objectID": "ggplot_ch_3.html",
    "href": "ggplot_ch_3.html",
    "title": "3¬† Ggplot Basics",
    "section": "",
    "text": "3.1 Reading in Data\nUse the here package to create file paths\npath &lt;- here::here(\"folder\", \"file.csv\")\nImport data with these functions:",
    "crumbs": [
      "Getting Started",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Ggplot Basics</span>"
    ]
  },
  {
    "objectID": "ggplot_ch_3.html#reading-in-data",
    "href": "ggplot_ch_3.html#reading-in-data",
    "title": "3¬† Ggplot Basics",
    "section": "",
    "text": "File type\nFunction\nLibrary\n\n\n\n\n.csv\nread_csv()\nreadr\n\n\n.txt\nread.table()\nutils\n\n\n.xlsx\nread_excel()\nreadxl\n\n\n\n\nImporting Comma Separated Values (.csv)\nRead in .csv files with read_csv():\n\nlibrary(tidyverse)\nlibrary(here)\n\ncsvPath &lt;- here('data', 'milk_production.csv')\nmilk_production &lt;- read_csv(csvPath) #&lt;&lt;\n\nhead(milk_production)\n\n#&gt; # A tibble: 6 √ó 4\n#&gt;   region    state          year milk_produced\n#&gt;   &lt;chr&gt;     &lt;chr&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n#&gt; 1 Northeast Maine          1970     619000000\n#&gt; 2 Northeast New Hampshire  1970     356000000\n#&gt; 3 Northeast Vermont        1970    1970000000\n#&gt; 4 Northeast Massachusetts  1970     658000000\n#&gt; 5 Northeast Rhode Island   1970      75000000\n#&gt; 6 Northeast Connecticut    1970     661000000\n\n\n\n\nImporting Text Files (.txt)\nRead in .txt files with read.table():\n\ntxtPath &lt;- here('data', 'nasa_global_temps.txt')\nglobal_temps &lt;- read.table(txtPath, skip = 5, header = FALSE) #&lt;&lt;\n\nhead(global_temps)\n\n#&gt;     V1    V2    V3\n#&gt; 1 1880 -0.15 -0.08\n#&gt; 2 1881 -0.07 -0.12\n#&gt; 3 1882 -0.10 -0.15\n#&gt; 4 1883 -0.16 -0.19\n#&gt; 5 1884 -0.27 -0.23\n#&gt; 6 1885 -0.32 -0.25\n\n\n\n\nImporting Text Files (.txt)\nRead in .txt files with read.table():\n\ntxtPath &lt;- here('data', 'nasa_global_temps.txt')\nglobal_temps &lt;- read.table(txtPath, skip = 5, header = FALSE)\nnames(global_temps) &lt;- c('year', 'no_smoothing', 'loess') # Add header #&lt;&lt;\n\nhead(global_temps)\n\n#&gt;   year no_smoothing loess\n#&gt; 1 1880        -0.15 -0.08\n#&gt; 2 1881        -0.07 -0.12\n#&gt; 3 1882        -0.10 -0.15\n#&gt; 4 1883        -0.16 -0.19\n#&gt; 5 1884        -0.27 -0.23\n#&gt; 6 1885        -0.32 -0.25\n\n\n\n\nImporting Excel Files (.xlsx)\nRead in .xlsx files with read_excel():\n\nlibrary(readxl)\n\nxlsxPath &lt;- here('data', 'pv_cell_production.xlsx')\npv_cells &lt;- read_excel(xlsxPath, sheet = 'Cell Prod by Country', skip = 2) #&lt;&lt;\n\n\nglimpse(pv_cells)\n\n#&gt; Rows: 25\n#&gt; Columns: 10\n#&gt; $ Year            &lt;chr&gt; NA, NA, \"1995\", \"1996\", \"1997\", \"1998\", \"1999\", \"20‚Ä¶\n#&gt; $ China           &lt;chr&gt; \"Megawatts\", NA, \"NA\", \"NA\", \"NA\", \"NA\", \"NA\", \"2.5‚Ä¶\n#&gt; $ Taiwan          &lt;chr&gt; NA, NA, \"NA\", \"NA\", \"NA\", \"NA\", \"NA\", \"NA\", \"3.5\", ‚Ä¶\n#&gt; $ Japan           &lt;dbl&gt; NA, NA, 16.4, 21.2, 35.0, 49.0, 80.0, 128.6, 171.2,‚Ä¶\n#&gt; $ Malaysia        &lt;chr&gt; NA, NA, \"NA\", \"NA\", \"NA\", \"NA\", \"NA\", \"NA\", \"0\", \"0‚Ä¶\n#&gt; $ Germany         &lt;chr&gt; NA, NA, \"NA\", \"NA\", \"NA\", \"NA\", \"NA\", \"22.5\", \"23.5‚Ä¶\n#&gt; $ `South Korea`   &lt;chr&gt; NA, NA, \"NA\", \"NA\", \"NA\", \"NA\", \"NA\", \"NA\", \"0\", \"0‚Ä¶\n#&gt; $ `United States` &lt;dbl&gt; NA, NA, 34.7500, 38.8500, 51.0000, 53.7000, 60.8000‚Ä¶\n#&gt; $ Others          &lt;chr&gt; NA, NA, \"NA\", \"NA\", \"NA\", \"NA\", \"NA\", \"48.200000000‚Ä¶\n#&gt; $ World           &lt;dbl&gt; NA, NA, 77.600, 88.600, 125.800, 154.900, 201.300, ‚Ä¶",
    "crumbs": [
      "Getting Started",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Ggplot Basics</span>"
    ]
  },
  {
    "objectID": "ggplot_ch_3.html#basic-plots-in-r",
    "href": "ggplot_ch_3.html#basic-plots-in-r",
    "title": "3¬† Ggplot Basics",
    "section": "3.2 Basic plots in R",
    "text": "3.2 Basic plots in R\nR has a number of built-in tools for basic graph types. Let‚Äôs start with two basic functions for scatter plots and histograms.\n\n3.2.1 Scatter plots with plot()\nA scatter plot provides a graphical view of the relationship between two variables. Typically these are used for ‚Äúcontinuous‚Äù variables, like time, age, money, etc‚Ä¶things that are not categorical in nature (as opposed to ‚Äúdiscrete‚Äù variables, like nationality). Here‚Äôs a scatterplot of the fuel efficiency (miles per gallon) of cars over their respective horsepower using the mtcars dataset:\n\nplot(x = mtcars$hp, y = mtcars$mpg)\n\n\n\n\n\n\n\n\nThe basic inputs to the plot() function are x and y, which must be vectors of the same length. You can customize many features (fonts, colors, axes, shape, titles, etc.) through graphic options. Here‚Äôs the same plot with a few customizations:\n\nplot(x    = mtcars$hp,\n     y    = mtcars$mpg,\n     col  = 'darkblue', # \"col\" changes the point color\n     pch  = 19, # \"pch\" changes the point shape\n     main = \"\",\n     xlab = \"Horsepower\",\n     ylab = \"Miles Per Gallon\")\n\n\n\n\n\n\n\n\nFrom this scatter plot, we can observe the relationship between a car‚Äôs horsepower and its fuel efficiency. As you may have guessed, cars with more horsepower or more powerful engines have less fuel efficiency.\n\n\n3.2.2 Histograms with hist()\nThe histogram is one of the most common ways to visualize the distribution of a variable. The hist() function takes just one variable: x. Here‚Äôs a histogram of the waiting variable showing the wait times between eruptions of the Old Faithful geyser:\n\nhist(x = faithful$waiting)\n\n\n\n\n\n\n\n\nWith this plot, we can see a trend where the geyser mostly erupts in roughly 50 or 80 minute intervals. As with the plot() function, you can customize a lot of the histogram features. One common customization is to modify the number of ‚Äúbins‚Äù in the histogram by changing the breaks argument. Here we‚Äôll fix the number of bins to 20 to get a clearer look at the data:\n\nhist(x      = faithful$waiting,\n     breaks = 20,\n     col    = 'lightblue3',\n     main   = \"Waiting Times Between Eruptions\",\n     xlab   = \"Waiting Time (in minutes)\",\n     ylab   = \"Count\")\n\n\n\n\n\n\n\n\nWith our changes, the chart is cleaner and it is clearer which waiting times the were most common.",
    "crumbs": [
      "Getting Started",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Ggplot Basics</span>"
    ]
  },
  {
    "objectID": "ggplot_ch_3.html#advanced-figures-with-ggplot2",
    "href": "ggplot_ch_3.html#advanced-figures-with-ggplot2",
    "title": "3¬† Ggplot Basics",
    "section": "3.3 Advanced figures with ggplot2",
    "text": "3.3 Advanced figures with ggplot2\n Art by Allison Horst\nWhile Base R plot functions are useful for making simple, quick plots, many R users have adopted the ggplot2 package as their primary tool for visualizing data.",
    "crumbs": [
      "Getting Started",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Ggplot Basics</span>"
    ]
  },
  {
    "objectID": "ggplot_ch_3.html#layering-with-ggplot",
    "href": "ggplot_ch_3.html#layering-with-ggplot",
    "title": "3¬† Ggplot Basics",
    "section": "3.4 Layering with ggplot",
    "text": "3.4 Layering with ggplot\n\n‚ÄúGrammar of Graphics‚Äù\nThe ggplot2 library is built on the ‚ÄúGrammar of Graphics‚Äù concept developed by Leland Wilkinson (1999). A ‚Äúgrammar of graphics‚Äù (that‚Äôs what the ‚Äúgg‚Äù in ‚Äúggplot2‚Äù stands for) is a framework that uses layers to describe and construct visualizations or graphics in a structured manner. Here‚Äôs a visual summary of the concept:\n\n\n\nggplot2 package developed by Hadley Wickham (2005)\n\n\nMaking plot layers with ggplot2\n\n1. The data\n\n\n2. The aesthetic mapping (what goes on the axes?)\n\n\n3. The geometries (points? bars? etc.)\n\n\n4. The annotations / labels\n\n\n5. The theme\n\n\n\nLayer 1: The data\n\nhead(mpg)\n\n#&gt; # A tibble: 6 √ó 11\n#&gt;   manufacturer model displ  year   cyl trans    drv     cty   hwy fl    class\n#&gt;   &lt;chr&gt;        &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;    &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt;\n#&gt; 1 audi         a4      1.8  1999     4 auto(l5) f        18    29 p     comp‚Ä¶\n#&gt; 2 audi         a4      1.8  1999     4 manual(‚Ä¶ f        21    29 p     comp‚Ä¶\n#&gt; 3 audi         a4      2    2008     4 manual(‚Ä¶ f        20    31 p     comp‚Ä¶\n#&gt; 4 audi         a4      2    2008     4 auto(av) f        21    30 p     comp‚Ä¶\n#&gt; 5 audi         a4      2.8  1999     6 auto(l5) f        16    26 p     comp‚Ä¶\n#&gt; 6 audi         a4      2.8  1999     6 manual(‚Ä¶ f        18    26 p     comp‚Ä¶\n\n\nThe ggplot() function initializes the plot with whatever data you‚Äôre using\n\nmpg %&gt;% \n  ggplot()\n\n\n\n\n\n\n\n\n\n\n\n\nLayer 2: The aesthetic mapping\nThe aes() function determines which variables will be mapped to the geometries(e.g.¬†the axes)\n\nmpg %&gt;% \n  ggplot(aes(x = displ, y = hwy)) #&lt;&lt;\n\n\n\n\n\n\n\n\n\n\n\n\nLayer 3: The geometries\nUse + to add geometries, e.g.¬†geom_points() for points\n\nmpg %&gt;% \n  ggplot(aes(x = displ, y = hwy)) +\n  geom_point() #&lt;&lt;\n\n\n\n\n\n\n\n\n\n\n\n\nLayer 4: The annotations / labels\nUse labs() to modify most labels\n\nmpg %&gt;% \n  ggplot(aes(x = displ, y = hwy)) +\n  geom_point() +\n  labs( #&lt;&lt;\n    x = \"Engine displacement (liters)\",  #&lt;&lt;\n    y = \"Highway fuel economy (mpg)\",  #&lt;&lt;\n    title = \"Most larger engine vehicles are less fuel efficient\" #&lt;&lt;\n  ) #&lt;&lt;\n\n\n\n\n\n\n\n\n\n\n\n\nLayer 5: The theme\n\nmpg %&gt;% \n  ggplot(aes(x = displ, y = hwy)) +\n  geom_point() +\n  labs(\n    x = \"Engine displacement (liters)\",  \n    y = \"Highway fuel economy (mpg)\", \n    title = \"Most larger engine vehicles are less fuel efficient\"\n  ) + \n  theme_bw() #&lt;&lt;\n\n\n\n\n\n\n\n\n\n\n\nCommon themes\ntheme_bw()\n\nmpg %&gt;% \n  ggplot(aes(x = displ, y = hwy)) +\n  geom_point() +\n  theme_bw() #&lt;&lt;\n\n\n\n\n\n\n\n\ntheme_minimal()\n\nmpg %&gt;% \n  ggplot(aes(x = displ, y = hwy)) +\n  geom_point() +\n  theme_minimal() #&lt;&lt;\n\n\n\n\n\n\n\n\ntheme_classic()\n\nmpg %&gt;% \n  ggplot(aes(x = displ, y = hwy)) +\n  geom_point() +\n  theme_classic() #&lt;&lt;\n\n\n\n\n\n\n\n\ntheme_void()\n\nmpg %&gt;% \n  ggplot(aes(x = displ, y = hwy)) +\n  geom_point() +\n  theme_void() #&lt;&lt;",
    "crumbs": [
      "Getting Started",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Ggplot Basics</span>"
    ]
  },
  {
    "objectID": "ggplot_ch_3.html#making-a-good-ggplot",
    "href": "ggplot_ch_3.html#making-a-good-ggplot",
    "title": "3¬† Ggplot Basics",
    "section": "3.5 Making a (good) ggplot",
    "text": "3.5 Making a (good) ggplot\n\nFormat data frame\nAdd geoms\nFlip coordinates?\nReorder factors?\nAdjust scales\nAdjust theme\nAnnotate\n\n\n1) Format data frame\n\n# Format the data frame\nwildlife_impacts %&gt;%\n  count(operator) #&lt;&lt;\n\n#&gt; # A tibble: 4 √ó 2\n#&gt;   operator               n\n#&gt;   &lt;chr&gt;              &lt;int&gt;\n#&gt; 1 AMERICAN AIRLINES  14887\n#&gt; 2 DELTA AIR LINES     9005\n#&gt; 3 SOUTHWEST AIRLINES 17970\n#&gt; 4 UNITED AIRLINES    15116\n\n\n\n\n2) Add geoms\n\n# Format the data frame\nwildlife_impacts %&gt;%\n  count(operator) %&gt;%\n\n# Add geoms\n  ggplot() +\n  geom_col(\n      aes(x = operator, y = n), #&lt;&lt;\n      width = 0.7, alpha = 0.8)\n\n\n\n\n\n\n3) Flip coordinates - can you read the labels?\n\n# Format the data frame\nwildlife_impacts %&gt;%\n  count(operator) %&gt;%\n\n# Add geoms\n  ggplot() +\n  geom_col(\n      aes(x = operator, y = n),\n      width = 0.7, alpha = 0.8) +\n\n# Flip coordinates\n  coord_flip() #&lt;&lt;\n\n\n\n\n\n# Format the data frame\nwildlife_impacts %&gt;%\n  count(operator) %&gt;%\n\n# Add geoms\n  ggplot() +\n  geom_col(\n      aes(x = n, y = operator), #&lt;&lt;\n      width = 0.7, alpha = 0.8)\n\n\n\n\n\n\n4) Reorder factors with reorder()\n\n# Format the data frame\nwildlife_impacts %&gt;%\n  count(operator) %&gt;%\n\n# Add geoms\n  ggplot() +\n  geom_col(\n      aes(x = n, y = reorder(operator, n)), #&lt;&lt;\n      width = 0.7, alpha = 0.8)\n\n\n\n\n\n\n5) Adjust scales\n\n# Format the data frame\nwildlife_impacts %&gt;%\n  count(operator) %&gt;%\n\n# Add geoms\n  ggplot() +\n  geom_col(\n      aes(x = n, y = reorder(operator, n)),\n      width = 0.7, alpha = 0.8) +\n\n# Adjust x axis scale\n  scale_x_continuous( #&lt;&lt;\n    expand = expansion(mult = c(0, 0.05))) #&lt;&lt;\n\n\n\n\n\nCustomize break points (if you want)\n\n# Format the data frame\nwildlife_impacts %&gt;%\n  count(operator) %&gt;%\n\n# Add geoms\n  ggplot() +\n  geom_col(\n      aes(x = n, y = reorder(operator, n)),\n      width = 0.7, alpha = 0.8) +\n\n# Adjust x axis scale\n  scale_x_continuous(\n    expand = expansion(mult = c(0, 0.05)),\n    breaks = c(0, 10000, 20000), #&lt;&lt;\n    limits = c(0, 20000)) #&lt;&lt;\n\n\n\n\n\n\n\n6) Adjust theme\n\nFour cowplot themes you should know\n\n\n\nFor horizontal bars, add only vertical grid\n\n# Format the data frame\nwildlife_impacts %&gt;%\n  count(operator) %&gt;%\n\n# Add geoms\n  ggplot() +\n  geom_col(\n      aes(x = n, y = reorder(operator, n)),\n      width = 0.7, alpha = 0.8) +\n\n# Adjust x axis scale\n  scale_x_continuous(\n    expand = expansion(mult = c(0, 0.05))) +\n\n# Adjust theme\n  theme_minimal_vgrid() #&lt;&lt;\n\n\n\n\n\n\n\n7) Annotate\n\n# Format the data frame\nwildlife_impacts %&gt;%\n  count(operator) %&gt;%\n  mutate(operator = str_to_title(operator)) %&gt;% #&lt;&lt;\n\n# Add geoms\n  ggplot() +\n  geom_col(\n      aes(x = n, y = reorder(operator, n)),\n      width = 0.7, alpha = 0.8) +\n\n# Adjust x axis scale\n  scale_x_continuous(\n    expand = expansion(mult = c(0, 0.05))) +\n\n# Adjust theme\n  theme_minimal_vgrid() +\n\n# Annotate\n  labs( #&lt;&lt;\n    x = 'Count', #&lt;&lt;\n    y = NULL) #&lt;&lt;\n\n\n\n\n\n\nFinished product\n\nwildlife_impacts %&gt;%\n  count(operator) %&gt;%\n  mutate(operator = str_to_title(operator)) %&gt;%\n  ggplot() +\n  geom_col(\n      aes(x = n, y = reorder(operator, n)),\n      width = 0.7, alpha = 0.8) +\n  scale_x_continuous(\n    expand = expansion(mult = c(0, 0.05))) +\n  theme_minimal_vgrid() +\n  labs(\n    x = 'Count',\n    y = NULL)",
    "crumbs": [
      "Getting Started",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Ggplot Basics</span>"
    ]
  },
  {
    "objectID": "part_2.html",
    "href": "part_2.html",
    "title": "Data Preparation",
    "section": "",
    "text": "Data Preparation\ntext",
    "crumbs": [
      "Data Preparation"
    ]
  },
  {
    "objectID": "tidy_ch_4.html",
    "href": "tidy_ch_4.html",
    "title": "4¬† Tidy Data",
    "section": "",
    "text": "4.1 ‚ÄúWide‚Äù and ‚ÄúLong‚Äù Formatted Data",
    "crumbs": [
      "Data Preparation",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Tidy Data</span>"
    ]
  },
  {
    "objectID": "tidy_ch_4.html#wide-and-long-formatted-data",
    "href": "tidy_ch_4.html#wide-and-long-formatted-data",
    "title": "4¬† Tidy Data",
    "section": "",
    "text": "The Data: Federal R&D Spending by Department\n\n\n#&gt; # A tibble: 6 √ó 15\n#&gt;    year   DHS   DOC   DOD   DOE   DOT   EPA   HHS Interior  NASA   NIH   NSF\n#&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1  1976     0   819 35696 10882  1142   968  9226     1152 12513  8025  2372\n#&gt; 2  1977     0   837 37967 13741  1095   966  9507     1082 12553  8214  2395\n#&gt; 3  1978     0   871 37022 15663  1156  1175 10533     1125 12516  8802  2446\n#&gt; 4  1979     0   952 37174 15612  1004  1102 10127     1176 13079  9243  2404\n#&gt; 5  1980     0   945 37005 15226  1048   903 10045     1082 13837  9093  2407\n#&gt; 6  1981     0   829 41737 14798   978   901  9644      990 13276  8580  2300\n#&gt; # ‚Ñπ 3 more variables: Other &lt;dbl&gt;, USDA &lt;dbl&gt;, VA &lt;dbl&gt;\n\n\n\n\n‚ÄúWide‚Äù format\n\n\n#&gt; # A tibble: 6 √ó 15\n#&gt;    year   DHS   DOC   DOD   DOE   DOT   EPA   HHS Interior  NASA   NIH   NSF\n#&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1  1976     0   819 35696 10882  1142   968  9226     1152 12513  8025  2372\n#&gt; 2  1977     0   837 37967 13741  1095   966  9507     1082 12553  8214  2395\n#&gt; 3  1978     0   871 37022 15663  1156  1175 10533     1125 12516  8802  2446\n#&gt; 4  1979     0   952 37174 15612  1004  1102 10127     1176 13079  9243  2404\n#&gt; 5  1980     0   945 37005 15226  1048   903 10045     1082 13837  9093  2407\n#&gt; 6  1981     0   829 41737 14798   978   901  9644      990 13276  8580  2300\n#&gt; # ‚Ñπ 3 more variables: Other &lt;dbl&gt;, USDA &lt;dbl&gt;, VA &lt;dbl&gt;\n\n\nDimensions:\n\n\n#&gt; [1] 42 15\n\n\n\n\n‚ÄúLong‚Äù format\n\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;   department  year rd_budget_mil\n#&gt;   &lt;chr&gt;      &lt;dbl&gt;         &lt;dbl&gt;\n#&gt; 1 DOD         1976         35696\n#&gt; 2 NASA        1976         12513\n#&gt; 3 DOE         1976         10882\n#&gt; 4 HHS         1976          9226\n#&gt; 5 NIH         1976          8025\n#&gt; 6 NSF         1976          2372\n\n\nDimensions:\n\n\n#&gt; [1] 588   3\n\n\n\n\nTidy data = ‚ÄúLong‚Äù format\n\nEach variable has its own column\nEach observation has its own row\n\n\n\n\n\n\nDo the names describe the values?\n\nYes: ‚ÄúLong‚Äù format\n\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;   department  year rd_budget_mil\n#&gt;   &lt;chr&gt;      &lt;dbl&gt;         &lt;dbl&gt;\n#&gt; 1 DOD         1976         35696\n#&gt; 2 NASA        1976         12513\n#&gt; 3 DOE         1976         10882\n#&gt; 4 HHS         1976          9226\n#&gt; 5 NIH         1976          8025\n#&gt; 6 NSF         1976          2372\n\n\n\n\nNo: ‚ÄúWide‚Äù format\n\n\n#&gt; # A tibble: 6 √ó 8\n#&gt;    year   DHS   DOC   DOD   DOE   DOT   EPA   HHS\n#&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1  1976     0   819 35696 10882  1142   968  9226\n#&gt; 2  1977     0   837 37967 13741  1095   966  9507\n#&gt; 3  1978     0   871 37022 15663  1156  1175 10533\n#&gt; 4  1979     0   952 37174 15612  1004  1102 10127\n#&gt; 5  1980     0   945 37005 15226  1048   903 10045\n#&gt; 6  1981     0   829 41737 14798   978   901  9644\n\n\n\n\n\nReshaping data\n\npivot_longer() and pivot_wider()\n\n\n\n\n\nFrom ‚Äúlong‚Äù to ‚Äúwide‚Äù with pivot_wider()\n\n\n\n\nhead(fed_spend_long)\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;   department  year rd_budget_mil\n#&gt;   &lt;chr&gt;      &lt;dbl&gt;         &lt;dbl&gt;\n#&gt; 1 DOD         1976         35696\n#&gt; 2 NASA        1976         12513\n#&gt; 3 DOE         1976         10882\n#&gt; 4 HHS         1976          9226\n#&gt; 5 NIH         1976          8025\n#&gt; 6 NSF         1976          2372\n\n\n\nfed_spend_wide &lt;- fed_spend_long %&gt;%\n    pivot_wider(\n        names_from = department,  #&lt;&lt;\n        values_from = rd_budget_mil) #&lt;&lt;\n\nhead(fed_spend_wide)\n\n#&gt; # A tibble: 6 √ó 15\n#&gt;    year   DOD  NASA   DOE   HHS   NIH   NSF  USDA Interior   DOT   EPA   DOC\n#&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1  1976 35696 12513 10882  9226  8025  2372  1837     1152  1142   968   819\n#&gt; 2  1977 37967 12553 13741  9507  8214  2395  1796     1082  1095   966   837\n#&gt; 3  1978 37022 12516 15663 10533  8802  2446  1962     1125  1156  1175   871\n#&gt; 4  1979 37174 13079 15612 10127  9243  2404  2054     1176  1004  1102   952\n#&gt; 5  1980 37005 13837 15226 10045  9093  2407  1887     1082  1048   903   945\n#&gt; 6  1981 41737 13276 14798  9644  8580  2300  1964      990   978   901   829\n#&gt; # ‚Ñπ 3 more variables: DHS &lt;dbl&gt;, VA &lt;dbl&gt;, Other &lt;dbl&gt;\n\n\n\n\n4.1.0.1 From ‚Äúwide‚Äù to ‚Äúlong‚Äù with pivot_longer()\n\n\n\n\nhead(fed_spend_wide)\n\n#&gt; # A tibble: 6 √ó 15\n#&gt;    year   DOD  NASA   DOE   HHS   NIH   NSF  USDA Interior   DOT   EPA   DOC\n#&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1  1976 35696 12513 10882  9226  8025  2372  1837     1152  1142   968   819\n#&gt; 2  1977 37967 12553 13741  9507  8214  2395  1796     1082  1095   966   837\n#&gt; 3  1978 37022 12516 15663 10533  8802  2446  1962     1125  1156  1175   871\n#&gt; 4  1979 37174 13079 15612 10127  9243  2404  2054     1176  1004  1102   952\n#&gt; 5  1980 37005 13837 15226 10045  9093  2407  1887     1082  1048   903   945\n#&gt; 6  1981 41737 13276 14798  9644  8580  2300  1964      990   978   901   829\n#&gt; # ‚Ñπ 3 more variables: DHS &lt;dbl&gt;, VA &lt;dbl&gt;, Other &lt;dbl&gt;\n\n\n\nfed_spend_long &lt;- fed_spend_wide %&gt;%\n    pivot_longer( \n        names_to = \"department\", #&lt;&lt;\n        values_to = \"rd_budget_mil\", #&lt;&lt; \n        cols = DOD:Other) #&lt;&lt;\n\nhead(fed_spend_long)\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;    year department rd_budget_mil\n#&gt;   &lt;dbl&gt; &lt;chr&gt;              &lt;dbl&gt;\n#&gt; 1  1976 DOD                35696\n#&gt; 2  1976 NASA               12513\n#&gt; 3  1976 DOE                10882\n#&gt; 4  1976 HHS                 9226\n#&gt; 5  1976 NIH                 8025\n#&gt; 6  1976 NSF                 2372\n\n\n\n\nCan also set cols by selecting which columns not to use\n\nnames(fed_spend_wide)\n\n#&gt;  [1] \"year\"     \"DOD\"      \"NASA\"     \"DOE\"      \"HHS\"      \"NIH\"     \n#&gt;  [7] \"NSF\"      \"USDA\"     \"Interior\" \"DOT\"      \"EPA\"      \"DOC\"     \n#&gt; [13] \"DHS\"      \"VA\"       \"Other\"\n\n\n\nfed_spend_long &lt;- fed_spend_wide %&gt;%\n    pivot_longer(\n        names_to = \"department\", \n        values_to = \"rd_budget_mil\",\n        cols = -year) #&lt;&lt;\n\nhead(fed_spend_long)\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;    year department rd_budget_mil\n#&gt;   &lt;dbl&gt; &lt;chr&gt;              &lt;dbl&gt;\n#&gt; 1  1976 DOD                35696\n#&gt; 2  1976 NASA               12513\n#&gt; 3  1976 DOE                10882\n#&gt; 4  1976 HHS                 9226\n#&gt; 5  1976 NIH                 8025\n#&gt; 6  1976 NSF                 2372",
    "crumbs": [
      "Data Preparation",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Tidy Data</span>"
    ]
  },
  {
    "objectID": "tidy_ch_4.html#tidy-data-wrangling",
    "href": "tidy_ch_4.html#tidy-data-wrangling",
    "title": "4¬† Tidy Data",
    "section": "4.2 Tidy data wrangling",
    "text": "4.2 Tidy data wrangling\nWhat is tidy data wrangling? (a quick explanation with cute graphics, by Allison Horst)\n\n\n\n\n\n\n\n\n\nCompute the total R&D spending in each year\n\nhead(fed_spend_wide)\n\n#&gt; # A tibble: 6 √ó 15\n#&gt;    year   DOD  NASA   DOE   HHS   NIH   NSF  USDA Interior   DOT   EPA   DOC\n#&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1  1976 35696 12513 10882  9226  8025  2372  1837     1152  1142   968   819\n#&gt; 2  1977 37967 12553 13741  9507  8214  2395  1796     1082  1095   966   837\n#&gt; 3  1978 37022 12516 15663 10533  8802  2446  1962     1125  1156  1175   871\n#&gt; 4  1979 37174 13079 15612 10127  9243  2404  2054     1176  1004  1102   952\n#&gt; 5  1980 37005 13837 15226 10045  9093  2407  1887     1082  1048   903   945\n#&gt; 6  1981 41737 13276 14798  9644  8580  2300  1964      990   978   901   829\n#&gt; # ‚Ñπ 3 more variables: DHS &lt;dbl&gt;, VA &lt;dbl&gt;, Other &lt;dbl&gt;\n\n\nLet‚Äôs compute the total R&D spending in each year\nApproach 1: Create new total by adding each variable\n\nfed_spend_wide %&gt;%\n  mutate(total = DHS + DOC + DOD + DOE + DOT + EPA + HHS + Interior + NASA + NIH + NSF + Other + USDA + VA) %&gt;%\n  select(year, total)\n\n#&gt; # A tibble: 42 √ó 2\n#&gt;    year total\n#&gt;   &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1  1976 86227\n#&gt; 2  1977 91807\n#&gt; 3  1978 94864\n#&gt; 4  1979 96601\n#&gt; 5  1980 96305\n#&gt; 6  1981 98304\n#&gt; # ‚Ñπ 36 more rows\n\n\nApproach 2: Reshape first, then summarise\n\nfed_spend_long &lt;- fed_spend_wide %&gt;%\n    pivot_longer(\n        names_to = \"department\", \n        values_to = \"rd_budget_mil\",\n        cols = -year) \n\nhead(fed_spend_long)\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;    year department rd_budget_mil\n#&gt;   &lt;dbl&gt; &lt;chr&gt;              &lt;dbl&gt;\n#&gt; 1  1976 DOD                35696\n#&gt; 2  1976 NASA               12513\n#&gt; 3  1976 DOE                10882\n#&gt; 4  1976 HHS                 9226\n#&gt; 5  1976 NIH                 8025\n#&gt; 6  1976 NSF                 2372\n\n\n\nfed_spend_long %&gt;%\n    group_by(year) %&gt;%\n    summarise(total = sum(rd_budget_mil))\n\n#&gt; # A tibble: 42 √ó 2\n#&gt;    year total\n#&gt;   &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1  1976 86227\n#&gt; 2  1977 91807\n#&gt; 3  1978 94864\n#&gt; 4  1979 96601\n#&gt; 5  1980 96305\n#&gt; 6  1981 98304\n#&gt; # ‚Ñπ 36 more rows\n\n\n\ntotal &lt;- fed_spend_wide %&gt;%\n    pivot_longer(\n        names_to = \"department\", \n        values_to = \"rd_budget_mil\",\n        cols = -year) %&gt;% \n    group_by(year) %&gt;%\n    summarise(total = sum(rd_budget_mil))\n\n\nhead(total)\n\n#&gt; # A tibble: 6 √ó 2\n#&gt;    year total\n#&gt;   &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1  1976 86227\n#&gt; 2  1977 91807\n#&gt; 3  1978 94864\n#&gt; 4  1979 96601\n#&gt; 5  1980 96305\n#&gt; 6  1981 98304",
    "crumbs": [
      "Data Preparation",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Tidy Data</span>"
    ]
  },
  {
    "objectID": "tidy_ch_4.html#tidy-data-vizualization",
    "href": "tidy_ch_4.html#tidy-data-vizualization",
    "title": "4¬† Tidy Data",
    "section": "4.3 Tidy data vizualization",
    "text": "4.3 Tidy data vizualization\n\nhead(fed_spend_wide)\n\n#&gt; # A tibble: 6 √ó 15\n#&gt;    year   DOD  NASA   DOE   HHS   NIH   NSF  USDA Interior   DOT   EPA   DOC\n#&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n#&gt; 1  1976 35696 12513 10882  9226  8025  2372  1837     1152  1142   968   819\n#&gt; 2  1977 37967 12553 13741  9507  8214  2395  1796     1082  1095   966   837\n#&gt; 3  1978 37022 12516 15663 10533  8802  2446  1962     1125  1156  1175   871\n#&gt; 4  1979 37174 13079 15612 10127  9243  2404  2054     1176  1004  1102   952\n#&gt; 5  1980 37005 13837 15226 10045  9093  2407  1887     1082  1048   903   945\n#&gt; 6  1981 41737 13276 14798  9644  8580  2300  1964      990   978   901   829\n#&gt; # ‚Ñπ 3 more variables: DHS &lt;dbl&gt;, VA &lt;dbl&gt;, Other &lt;dbl&gt;\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(fed_spend_wide) +\n  geom_col(aes(x = rd_budget_mil, y = department)) + #&lt;&lt;\n  theme_bw() +\n  labs(\n      x = \"R&D Spending ($Millions)\",\n      y = \"Federal Agency\"\n  )\n\n#&gt; Error in `geom_col()`:\n#&gt; ! Problem while computing aesthetics.\n#&gt; ‚Ñπ Error occurred in the 1st layer.\n#&gt; Caused by error:\n#&gt; ! object 'rd_budget_mil' not found\n\n\n\nfed_spend_wide %&gt;%\n  pivot_longer( #&lt;&lt;\n    names_to = \"department\", #&lt;&lt;\n    values_to = \"rd_budget_mil\", #&lt;&lt;\n    cols = -year  #&lt;&lt;\n  ) %&gt;%\n  ggplot() +\n  geom_col(aes(x = rd_budget_mil, y = department)) +\n  theme_bw() +\n  labs(\n    x = \"R&D Spending ($Millions)\",\n    y = \"Federal Agency\"\n  )",
    "crumbs": [
      "Data Preparation",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Tidy Data</span>"
    ]
  },
  {
    "objectID": "tidy_ch_4.html#merging-data-sets-with-joins",
    "href": "tidy_ch_4.html#merging-data-sets-with-joins",
    "title": "4¬† Tidy Data",
    "section": "4.4 Merging Data Sets with Joins",
    "text": "4.4 Merging Data Sets with Joins\nTo start off, let‚Äôs take a look at this map. What‚Äôs wrong with it?\n\n\n\nClearly, the abbreviations are all mixed up. The likely culprit: merging two columns\n\nhead(names)\n\n#&gt;   state_name\n#&gt; 1    Alabama\n#&gt; 2     Alaska\n#&gt; 3    Arizona\n#&gt; 4   Arkansas\n#&gt; 5 California\n#&gt; 6   Colorado\n\nhead(abbs)\n\n#&gt;   state_abb\n#&gt; 1        AK\n#&gt; 2        AL\n#&gt; 3        AR\n#&gt; 4        AZ\n#&gt; 5        CA\n#&gt; 6        CO\n\n\n\nresult &lt;- bind_cols(names, abbs)\nhead(result)\n\n#&gt;   state_name state_abb\n#&gt; 1    Alabama        AK\n#&gt; 2     Alaska        AL\n#&gt; 3    Arizona        AR\n#&gt; 4   Arkansas        AZ\n#&gt; 5 California        CA\n#&gt; 6   Colorado        CO\n\n\nAs shown above, simply binding or merging two data sets is not the best choice. This is where joins come into play.\nThere are three types of joins that we can utilize to properly merge data sets.\n\ninner_join()\nleft_join() / right_join()\nfull_join()\n\nTake a look at the different joins applied to the band_members & band_instruments data sets.\n\nband_members\n\n#&gt; # A tibble: 3 √ó 2\n#&gt;   name  band   \n#&gt;   &lt;chr&gt; &lt;chr&gt;  \n#&gt; 1 Mick  Stones \n#&gt; 2 John  Beatles\n#&gt; 3 Paul  Beatles\n\n\n\nband_instruments\n\n#&gt; # A tibble: 3 √ó 2\n#&gt;   name  plays \n#&gt;   &lt;chr&gt; &lt;chr&gt; \n#&gt; 1 John  guitar\n#&gt; 2 Paul  bass  \n#&gt; 3 Keith guitar\n\n\n\ninner_join()\n\nband_members %&gt;%\n    inner_join(band_instruments)\n\n#&gt; # A tibble: 2 √ó 3\n#&gt;   name  band    plays \n#&gt;   &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n#&gt; 1 John  Beatles guitar\n#&gt; 2 Paul  Beatles bass\n\n\n\n\n\n\n\nfull_join()\n\nband_members %&gt;%\n    full_join(band_instruments)\n\n#&gt; # A tibble: 4 √ó 3\n#&gt;   name  band    plays \n#&gt;   &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n#&gt; 1 Mick  Stones  &lt;NA&gt;  \n#&gt; 2 John  Beatles guitar\n#&gt; 3 Paul  Beatles bass  \n#&gt; 4 Keith &lt;NA&gt;    guitar\n\n\n\n\n\n\n\nleft_join()\n\nband_members %&gt;%\n    left_join(band_instruments)\n\n#&gt; # A tibble: 3 √ó 3\n#&gt;   name  band    plays \n#&gt;   &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n#&gt; 1 Mick  Stones  &lt;NA&gt;  \n#&gt; 2 John  Beatles guitar\n#&gt; 3 Paul  Beatles bass\n\n\n\n\n\n\n\nright_join()\n\nband_members %&gt;%\n    right_join(band_instruments)\n\n#&gt; # A tibble: 3 √ó 3\n#&gt;   name  band    plays \n#&gt;   &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n#&gt; 1 John  Beatles guitar\n#&gt; 2 Paul  Beatles bass  \n#&gt; 3 Keith &lt;NA&gt;    guitar\n\n\n\n\n\n\n\nWe can also specify the joining variable name\n\nband_members %&gt;%\n    left_join(band_instruments)\n\n#&gt; Joining with `by = join_by(name)`\n\n\n#&gt; # A tibble: 3 √ó 3\n#&gt;   name  band    plays \n#&gt;   &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n#&gt; 1 Mick  Stones  &lt;NA&gt;  \n#&gt; 2 John  Beatles guitar\n#&gt; 3 Paul  Beatles bass\n\n\n\nband_members %&gt;%\n    left_join(\n        band_instruments,\n        by = 'name' #&lt;&lt;\n    )\n\n#&gt; # A tibble: 3 √ó 3\n#&gt;   name  band    plays \n#&gt;   &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n#&gt; 1 Mick  Stones  &lt;NA&gt;  \n#&gt; 2 John  Beatles guitar\n#&gt; 3 Paul  Beatles bass\n\n\n\n\nIf the names differ, use by = c(\"left_name\" = \"joining_name\")\n\nband_members\n\n#&gt; # A tibble: 3 √ó 2\n#&gt;   name  band   \n#&gt;   &lt;chr&gt; &lt;chr&gt;  \n#&gt; 1 Mick  Stones \n#&gt; 2 John  Beatles\n#&gt; 3 Paul  Beatles\n\n\n\nband_instruments2\n\n#&gt; # A tibble: 3 √ó 2\n#&gt;   artist plays \n#&gt;   &lt;chr&gt;  &lt;chr&gt; \n#&gt; 1 John   guitar\n#&gt; 2 Paul   bass  \n#&gt; 3 Keith  guitar\n\n\n\nband_members %&gt;%\n    left_join(\n        band_instruments2,\n        by = c(\"name\" = \"artist\") #&lt;&lt;\n    ) \n\n#&gt; # A tibble: 3 √ó 3\n#&gt;   name  band    plays \n#&gt;   &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n#&gt; 1 Mick  Stones  &lt;NA&gt;  \n#&gt; 2 John  Beatles guitar\n#&gt; 3 Paul  Beatles bass\n\n\nOr, just rename the joining variable in a pipe.\n\nband_members\n\n#&gt; # A tibble: 3 √ó 2\n#&gt;   name  band   \n#&gt;   &lt;chr&gt; &lt;chr&gt;  \n#&gt; 1 Mick  Stones \n#&gt; 2 John  Beatles\n#&gt; 3 Paul  Beatles\n\n\n\nband_instruments2\n\n#&gt; # A tibble: 3 √ó 2\n#&gt;   artist plays \n#&gt;   &lt;chr&gt;  &lt;chr&gt; \n#&gt; 1 John   guitar\n#&gt; 2 Paul   bass  \n#&gt; 3 Keith  guitar\n\n\n\nband_members %&gt;%\n    rename(artist = name) %&gt;% #&lt;&lt;\n    left_join(\n        band_instruments2,\n        by = \"artist\"  #&lt;&lt;\n    )\n\n#&gt; # A tibble: 3 √ó 3\n#&gt;   artist band    plays \n#&gt;   &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt; \n#&gt; 1 Mick   Stones  &lt;NA&gt;  \n#&gt; 2 John   Beatles guitar\n#&gt; 3 Paul   Beatles bass",
    "crumbs": [
      "Data Preparation",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Tidy Data</span>"
    ]
  },
  {
    "objectID": "tidy_ch_4.html#variable-types-and-names",
    "href": "tidy_ch_4.html#variable-types-and-names",
    "title": "4¬† Tidy Data",
    "section": "4.5 Variable Types and Names",
    "text": "4.5 Variable Types and Names\n\n4.5.1 Variable Types\n\nAlways check variable types after reading in data!\n\nwind &lt;- read_excel(here::here(\n  'data', 'US_State_Wind_Energy_Facts_2018.xlsx'))\n\nglimpse(wind)\n\n#&gt; Rows: 50\n#&gt; Columns: 7\n#&gt; $ Ranking                         &lt;chr&gt; \"1.0\", \"2.0\", \"3.0\", \"4.0\", \"5.0\", ‚Ä¶\n#&gt; $ State                           &lt;chr&gt; \"TEXAS\", \"OKLAHOMA\", \"IOWA\", \"CALIF‚Ä¶\n#&gt; $ `Installed Capacity (MW)`       &lt;dbl&gt; 23262, 7495, 7312, 5686, 5110, 4464‚Ä¶\n#&gt; $ `Equivalent Homes Powered`      &lt;chr&gt; \"6235000.0\", \"2268000.0\", \"1935000.‚Ä¶\n#&gt; $ `Total Investment ($ Millions)` &lt;chr&gt; \"42000.0\", \"13700.0\", \"14200.0\", \"1‚Ä¶\n#&gt; $ `Wind Projects Online`          &lt;dbl&gt; 136, 45, 107, 104, 35, 49, 98, 31, ‚Ä¶\n#&gt; $ `# of Wind Turbines`            &lt;chr&gt; \"12750.0\", \"3717.0\", \"4145.0\", \"697‚Ä¶\n\n\n\n\nBe careful converting strings to numbers!\n\nas.numeric()\n\nas.numeric(c(\"2.1\", \"3.7\", \"4.50\"))\n\n#&gt; [1] 2.1 3.7 4.5\n\nas.numeric(c(\"$2.1\", \"$3.7\", \"$4.50\"))\n\n#&gt; [1] NA NA NA\n\n\n\n\nparse_number()\n\nparse_number(c(\"2.1\", \"3.7\", \"4.50\"))\n\n#&gt; [1] 2.1 3.7 4.5\n\nparse_number(c(\"$2.1\", \"$3.7\", \"$4.50\"))\n\n#&gt; [1] 2.1 3.7 4.5\n\nparse_number(c(\"1-800-123-4567\"))\n\n#&gt; [1] 1\n\n\nOnce applied we get:\n\nwind &lt;- read_excel(here::here(\n  'data', 'US_State_Wind_Energy_Facts_2018.xlsx')) %&gt;%\n  mutate(\n    Ranking = as.numeric(Ranking),#&lt;&lt;\n    `Equivalent Homes Powered` = as.numeric(`Equivalent Homes Powered`),#&lt;&lt;\n    `Total Investment ($ Millions)` = as.numeric(`Total Investment ($ Millions)`),#&lt;&lt;\n    `# of Wind Turbines` = as.numeric(`# of Wind Turbines`) #&lt;&lt;\n  )\n    \nglimpse(wind)\n\n#&gt; Rows: 50\n#&gt; Columns: 7\n#&gt; $ Ranking                         &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ‚Ä¶\n#&gt; $ State                           &lt;chr&gt; \"TEXAS\", \"OKLAHOMA\", \"IOWA\", \"CALIF‚Ä¶\n#&gt; $ `Installed Capacity (MW)`       &lt;dbl&gt; 23262, 7495, 7312, 5686, 5110, 4464‚Ä¶\n#&gt; $ `Equivalent Homes Powered`      &lt;dbl&gt; 6235000, 2268000, 1935000, 1298000,‚Ä¶\n#&gt; $ `Total Investment ($ Millions)` &lt;dbl&gt; 42000, 13700, 14200, 12600, 9400, 8‚Ä¶\n#&gt; $ `Wind Projects Online`          &lt;dbl&gt; 136, 45, 107, 104, 35, 49, 98, 31, ‚Ä¶\n#&gt; $ `# of Wind Turbines`            &lt;dbl&gt; 12750, 3717, 4145, 6972, 2795, 2632‚Ä¶\n\n\n\n\n\n\n\n4.5.2 Renaming made easy\njanitor::clean_names()\nThe janitor package is a great tool to ‚Äúclean‚Äù names of columns in data sets.\n\n\n\nIf we take the wind data ..\n\nwind &lt;- read_excel(here::here(\n  'data', 'US_State_Wind_Energy_Facts_2018.xlsx'))\n\nglimpse(wind)\n\n#&gt; Rows: 50\n#&gt; Columns: 7\n#&gt; $ Ranking                         &lt;chr&gt; \"1.0\", \"2.0\", \"3.0\", \"4.0\", \"5.0\", ‚Ä¶\n#&gt; $ State                           &lt;chr&gt; \"TEXAS\", \"OKLAHOMA\", \"IOWA\", \"CALIF‚Ä¶\n#&gt; $ `Installed Capacity (MW)`       &lt;dbl&gt; 23262, 7495, 7312, 5686, 5110, 4464‚Ä¶\n#&gt; $ `Equivalent Homes Powered`      &lt;chr&gt; \"6235000.0\", \"2268000.0\", \"1935000.‚Ä¶\n#&gt; $ `Total Investment ($ Millions)` &lt;chr&gt; \"42000.0\", \"13700.0\", \"14200.0\", \"1‚Ä¶\n#&gt; $ `Wind Projects Online`          &lt;dbl&gt; 136, 45, 107, 104, 35, 49, 98, 31, ‚Ä¶\n#&gt; $ `# of Wind Turbines`            &lt;chr&gt; \"12750.0\", \"3717.0\", \"4145.0\", \"697‚Ä¶\n\n\n.. and use janitor, we can easily ‚Äúclean‚Äù the names.\n\nlibrary(janitor) #&lt;&lt;\n\nwind &lt;- read_excel(here::here(\n  'data', 'US_State_Wind_Energy_Facts_2018.xlsx')) %&gt;%\n  clean_names() #&lt;&lt;\n\nglimpse(wind)\n\n#&gt; Rows: 50\n#&gt; Columns: 7\n#&gt; $ ranking                   &lt;chr&gt; \"1.0\", \"2.0\", \"3.0\", \"4.0\", \"5.0\", \"6.0\",‚Ä¶\n#&gt; $ state                     &lt;chr&gt; \"TEXAS\", \"OKLAHOMA\", \"IOWA\", \"CALIFORNIA\"‚Ä¶\n#&gt; $ installed_capacity_mw     &lt;dbl&gt; 23262, 7495, 7312, 5686, 5110, 4464, 3699‚Ä¶\n#&gt; $ equivalent_homes_powered  &lt;chr&gt; \"6235000.0\", \"2268000.0\", \"1935000.0\", \"1‚Ä¶\n#&gt; $ total_investment_millions &lt;chr&gt; \"42000.0\", \"13700.0\", \"14200.0\", \"12600.0‚Ä¶\n#&gt; $ wind_projects_online      &lt;dbl&gt; 136, 45, 107, 104, 35, 49, 98, 31, 25, 20‚Ä¶\n#&gt; $ number_of_wind_turbines   &lt;chr&gt; \"12750.0\", \"3717.0\", \"4145.0\", \"6972.0\", ‚Ä¶\n\n\nWe can even change the style of the names.\n\nlibrary(janitor) #&lt;&lt;\n\nwind &lt;- read_excel(here::here(\n  'data', 'US_State_Wind_Energy_Facts_2018.xlsx')) %&gt;%\n  clean_names(case = 'lower_camel') #&lt;&lt;\n\nglimpse(wind)\n\n#&gt; Rows: 50\n#&gt; Columns: 7\n#&gt; $ ranking                 &lt;chr&gt; \"1.0\", \"2.0\", \"3.0\", \"4.0\", \"5.0\", \"6.0\", \"‚Ä¶\n#&gt; $ state                   &lt;chr&gt; \"TEXAS\", \"OKLAHOMA\", \"IOWA\", \"CALIFORNIA\", ‚Ä¶\n#&gt; $ installedCapacityMw     &lt;dbl&gt; 23262, 7495, 7312, 5686, 5110, 4464, 3699, ‚Ä¶\n#&gt; $ equivalentHomesPowered  &lt;chr&gt; \"6235000.0\", \"2268000.0\", \"1935000.0\", \"129‚Ä¶\n#&gt; $ totalInvestmentMillions &lt;chr&gt; \"42000.0\", \"13700.0\", \"14200.0\", \"12600.0\",‚Ä¶\n#&gt; $ windProjectsOnline      &lt;dbl&gt; 136, 45, 107, 104, 35, 49, 98, 31, 25, 20, ‚Ä¶\n#&gt; $ numberOfWindTurbines    &lt;chr&gt; \"12750.0\", \"3717.0\", \"4145.0\", \"6972.0\", \"2‚Ä¶\n\n\n\nlibrary(janitor) #&lt;&lt;\n\nwind &lt;- read_excel(here::here(\n  'data', 'US_State_Wind_Energy_Facts_2018.xlsx')) %&gt;%\n  clean_names(case = 'screaming_snake') #&lt;&lt;\n\nglimpse(wind)\n\n#&gt; Rows: 50\n#&gt; Columns: 7\n#&gt; $ RANKING                   &lt;chr&gt; \"1.0\", \"2.0\", \"3.0\", \"4.0\", \"5.0\", \"6.0\",‚Ä¶\n#&gt; $ STATE                     &lt;chr&gt; \"TEXAS\", \"OKLAHOMA\", \"IOWA\", \"CALIFORNIA\"‚Ä¶\n#&gt; $ INSTALLED_CAPACITY_MW     &lt;dbl&gt; 23262, 7495, 7312, 5686, 5110, 4464, 3699‚Ä¶\n#&gt; $ EQUIVALENT_HOMES_POWERED  &lt;chr&gt; \"6235000.0\", \"2268000.0\", \"1935000.0\", \"1‚Ä¶\n#&gt; $ TOTAL_INVESTMENT_MILLIONS &lt;chr&gt; \"42000.0\", \"13700.0\", \"14200.0\", \"12600.0‚Ä¶\n#&gt; $ WIND_PROJECTS_ONLINE      &lt;dbl&gt; 136, 45, 107, 104, 35, 49, 98, 31, 25, 20‚Ä¶\n#&gt; $ NUMBER_OF_WIND_TURBINES   &lt;chr&gt; \"12750.0\", \"3717.0\", \"4145.0\", \"6972.0\", ‚Ä¶\n\n\n\nselect() : More Powerful Than You Probably Thought\nExample: data on sleeping patterns of different mammals\n\nglimpse(msleep)\n\n#&gt; Rows: 83\n#&gt; Columns: 11\n#&gt; $ name         &lt;chr&gt; \"Cheetah\", \"Owl monkey\", \"Mountain beaver\", \"Greater s‚Ä¶\n#&gt; $ genus        &lt;chr&gt; \"Acinonyx\", \"Aotus\", \"Aplodontia\", \"Blarina\", \"Bos\", \"‚Ä¶\n#&gt; $ vore         &lt;chr&gt; \"carni\", \"omni\", \"herbi\", \"omni\", \"herbi\", \"herbi\", \"c‚Ä¶\n#&gt; $ order        &lt;chr&gt; \"Carnivora\", \"Primates\", \"Rodentia\", \"Soricomorpha\", \"‚Ä¶\n#&gt; $ conservation &lt;chr&gt; \"lc\", NA, \"nt\", \"lc\", \"domesticated\", NA, \"vu\", NA, \"d‚Ä¶\n#&gt; $ sleep_total  &lt;dbl&gt; 12.1, 17.0, 14.4, 14.9, 4.0, 14.4, 8.7, 7.0, 10.1, 3.0‚Ä¶\n#&gt; $ sleep_rem    &lt;dbl&gt; NA, 1.8, 2.4, 2.3, 0.7, 2.2, 1.4, NA, 2.9, NA, 0.6, 0.‚Ä¶\n#&gt; $ sleep_cycle  &lt;dbl&gt; NA, NA, NA, 0.1333333, 0.6666667, 0.7666667, 0.3833333‚Ä¶\n#&gt; $ awake        &lt;dbl&gt; 11.9, 7.0, 9.6, 9.1, 20.0, 9.6, 15.3, 17.0, 13.9, 21.0‚Ä¶\n#&gt; $ brainwt      &lt;dbl&gt; NA, 0.01550, NA, 0.00029, 0.42300, NA, NA, NA, 0.07000‚Ä¶\n#&gt; $ bodywt       &lt;dbl&gt; 50.000, 0.480, 1.350, 0.019, 600.000, 3.850, 20.490, 0‚Ä¶\n\n\nUse select() to choose which columns to keep\n\nmsleep %&gt;%\n  select(name:order, sleep_total:sleep_cycle) %&gt;% #&lt;&lt;\n  glimpse()\n\n#&gt; Rows: 83\n#&gt; Columns: 7\n#&gt; $ name        &lt;chr&gt; \"Cheetah\", \"Owl monkey\", \"Mountain beaver\", \"Greater sh‚Ä¶\n#&gt; $ genus       &lt;chr&gt; \"Acinonyx\", \"Aotus\", \"Aplodontia\", \"Blarina\", \"Bos\", \"B‚Ä¶\n#&gt; $ vore        &lt;chr&gt; \"carni\", \"omni\", \"herbi\", \"omni\", \"herbi\", \"herbi\", \"ca‚Ä¶\n#&gt; $ order       &lt;chr&gt; \"Carnivora\", \"Primates\", \"Rodentia\", \"Soricomorpha\", \"A‚Ä¶\n#&gt; $ sleep_total &lt;dbl&gt; 12.1, 17.0, 14.4, 14.9, 4.0, 14.4, 8.7, 7.0, 10.1, 3.0,‚Ä¶\n#&gt; $ sleep_rem   &lt;dbl&gt; NA, 1.8, 2.4, 2.3, 0.7, 2.2, 1.4, NA, 2.9, NA, 0.6, 0.8‚Ä¶\n#&gt; $ sleep_cycle &lt;dbl&gt; NA, NA, NA, 0.1333333, 0.6666667, 0.7666667, 0.3833333,‚Ä¶\n\n\nUse select() to choose which columns to drop\n\nmsleep %&gt;%\n  select(-(name:order)) %&gt;%\n  glimpse()\n\n#&gt; Rows: 83\n#&gt; Columns: 7\n#&gt; $ conservation &lt;chr&gt; \"lc\", NA, \"nt\", \"lc\", \"domesticated\", NA, \"vu\", NA, \"d‚Ä¶\n#&gt; $ sleep_total  &lt;dbl&gt; 12.1, 17.0, 14.4, 14.9, 4.0, 14.4, 8.7, 7.0, 10.1, 3.0‚Ä¶\n#&gt; $ sleep_rem    &lt;dbl&gt; NA, 1.8, 2.4, 2.3, 0.7, 2.2, 1.4, NA, 2.9, NA, 0.6, 0.‚Ä¶\n#&gt; $ sleep_cycle  &lt;dbl&gt; NA, NA, NA, 0.1333333, 0.6666667, 0.7666667, 0.3833333‚Ä¶\n#&gt; $ awake        &lt;dbl&gt; 11.9, 7.0, 9.6, 9.1, 20.0, 9.6, 15.3, 17.0, 13.9, 21.0‚Ä¶\n#&gt; $ brainwt      &lt;dbl&gt; NA, 0.01550, NA, 0.00029, 0.42300, NA, NA, NA, 0.07000‚Ä¶\n#&gt; $ bodywt       &lt;dbl&gt; 50.000, 0.480, 1.350, 0.019, 600.000, 3.850, 20.490, 0‚Ä¶\n\n\n\nWe can also select columns based on partial column names\nFor example, we can select columns that start with ‚Äúsleep‚Äù:\n\nmsleep %&gt;%\n  select(name, starts_with(\"sleep\")) %&gt;%\n  glimpse()\n\n#&gt; Rows: 83\n#&gt; Columns: 4\n#&gt; $ name        &lt;chr&gt; \"Cheetah\", \"Owl monkey\", \"Mountain beaver\", \"Greater sh‚Ä¶\n#&gt; $ sleep_total &lt;dbl&gt; 12.1, 17.0, 14.4, 14.9, 4.0, 14.4, 8.7, 7.0, 10.1, 3.0,‚Ä¶\n#&gt; $ sleep_rem   &lt;dbl&gt; NA, 1.8, 2.4, 2.3, 0.7, 2.2, 1.4, NA, 2.9, NA, 0.6, 0.8‚Ä¶\n#&gt; $ sleep_cycle &lt;dbl&gt; NA, NA, NA, 0.1333333, 0.6666667, 0.7666667, 0.3833333,‚Ä¶\n\n\nOr we can select columns that contain ‚Äúeep‚Äù and end with ‚Äúwt‚Äù:\n\nmsleep %&gt;%\n  select(contains(\"eep\"), ends_with(\"wt\")) %&gt;%\n  glimpse()\n\n#&gt; Rows: 83\n#&gt; Columns: 5\n#&gt; $ sleep_total &lt;dbl&gt; 12.1, 17.0, 14.4, 14.9, 4.0, 14.4, 8.7, 7.0, 10.1, 3.0,‚Ä¶\n#&gt; $ sleep_rem   &lt;dbl&gt; NA, 1.8, 2.4, 2.3, 0.7, 2.2, 1.4, NA, 2.9, NA, 0.6, 0.8‚Ä¶\n#&gt; $ sleep_cycle &lt;dbl&gt; NA, NA, NA, 0.1333333, 0.6666667, 0.7666667, 0.3833333,‚Ä¶\n#&gt; $ brainwt     &lt;dbl&gt; NA, 0.01550, NA, 0.00029, 0.42300, NA, NA, NA, 0.07000,‚Ä¶\n#&gt; $ bodywt      &lt;dbl&gt; 50.000, 0.480, 1.350, 0.019, 600.000, 3.850, 20.490, 0.‚Ä¶\n\n\n\n\nUse select() to select columns based on their data type\nSelect only numeric columns:\n\nmsleep %&gt;%\n    select_if(is.numeric) %&gt;%\n    glimpse()\n\n#&gt; Rows: 83\n#&gt; Columns: 6\n#&gt; $ sleep_total &lt;dbl&gt; 12.1, 17.0, 14.4, 14.9, 4.0, 14.4, 8.7, 7.0, 10.1, 3.0,‚Ä¶\n#&gt; $ sleep_rem   &lt;dbl&gt; NA, 1.8, 2.4, 2.3, 0.7, 2.2, 1.4, NA, 2.9, NA, 0.6, 0.8‚Ä¶\n#&gt; $ sleep_cycle &lt;dbl&gt; NA, NA, NA, 0.1333333, 0.6666667, 0.7666667, 0.3833333,‚Ä¶\n#&gt; $ awake       &lt;dbl&gt; 11.9, 7.0, 9.6, 9.1, 20.0, 9.6, 15.3, 17.0, 13.9, 21.0,‚Ä¶\n#&gt; $ brainwt     &lt;dbl&gt; NA, 0.01550, NA, 0.00029, 0.42300, NA, NA, NA, 0.07000,‚Ä¶\n#&gt; $ bodywt      &lt;dbl&gt; 50.000, 0.480, 1.350, 0.019, 600.000, 3.850, 20.490, 0.‚Ä¶\n\n\nSelect only character columns:\n\nmsleep %&gt;%\n    select_if(is.character) %&gt;%\n    glimpse()\n\n#&gt; Rows: 83\n#&gt; Columns: 5\n#&gt; $ name         &lt;chr&gt; \"Cheetah\", \"Owl monkey\", \"Mountain beaver\", \"Greater s‚Ä¶\n#&gt; $ genus        &lt;chr&gt; \"Acinonyx\", \"Aotus\", \"Aplodontia\", \"Blarina\", \"Bos\", \"‚Ä¶\n#&gt; $ vore         &lt;chr&gt; \"carni\", \"omni\", \"herbi\", \"omni\", \"herbi\", \"herbi\", \"c‚Ä¶\n#&gt; $ order        &lt;chr&gt; \"Carnivora\", \"Primates\", \"Rodentia\", \"Soricomorpha\", \"‚Ä¶\n#&gt; $ conservation &lt;chr&gt; \"lc\", NA, \"nt\", \"lc\", \"domesticated\", NA, \"vu\", NA, \"d‚Ä¶\n\n\n\n\nUse select() to reorder variables\n\nmsleep %&gt;%\n    select(everything()) %&gt;%\n    glimpse()\n\n#&gt; Rows: 83\n#&gt; Columns: 11\n#&gt; $ name         &lt;chr&gt; \"Cheetah\", \"Owl monkey\", \"Mountain beaver\", \"Greater s‚Ä¶\n#&gt; $ genus        &lt;chr&gt; \"Acinonyx\", \"Aotus\", \"Aplodontia\", \"Blarina\", \"Bos\", \"‚Ä¶\n#&gt; $ vore         &lt;chr&gt; \"carni\", \"omni\", \"herbi\", \"omni\", \"herbi\", \"herbi\", \"c‚Ä¶\n#&gt; $ order        &lt;chr&gt; \"Carnivora\", \"Primates\", \"Rodentia\", \"Soricomorpha\", \"‚Ä¶\n#&gt; $ conservation &lt;chr&gt; \"lc\", NA, \"nt\", \"lc\", \"domesticated\", NA, \"vu\", NA, \"d‚Ä¶\n#&gt; $ sleep_total  &lt;dbl&gt; 12.1, 17.0, 14.4, 14.9, 4.0, 14.4, 8.7, 7.0, 10.1, 3.0‚Ä¶\n#&gt; $ sleep_rem    &lt;dbl&gt; NA, 1.8, 2.4, 2.3, 0.7, 2.2, 1.4, NA, 2.9, NA, 0.6, 0.‚Ä¶\n#&gt; $ sleep_cycle  &lt;dbl&gt; NA, NA, NA, 0.1333333, 0.6666667, 0.7666667, 0.3833333‚Ä¶\n#&gt; $ awake        &lt;dbl&gt; 11.9, 7.0, 9.6, 9.1, 20.0, 9.6, 15.3, 17.0, 13.9, 21.0‚Ä¶\n#&gt; $ brainwt      &lt;dbl&gt; NA, 0.01550, NA, 0.00029, 0.42300, NA, NA, NA, 0.07000‚Ä¶\n#&gt; $ bodywt       &lt;dbl&gt; 50.000, 0.480, 1.350, 0.019, 600.000, 3.850, 20.490, 0‚Ä¶\n\n\n\nmsleep %&gt;%\n    select(conservation, awake, everything()) %&gt;%\n    glimpse()\n\n#&gt; Rows: 83\n#&gt; Columns: 11\n#&gt; $ conservation &lt;chr&gt; \"lc\", NA, \"nt\", \"lc\", \"domesticated\", NA, \"vu\", NA, \"d‚Ä¶\n#&gt; $ awake        &lt;dbl&gt; 11.9, 7.0, 9.6, 9.1, 20.0, 9.6, 15.3, 17.0, 13.9, 21.0‚Ä¶\n#&gt; $ name         &lt;chr&gt; \"Cheetah\", \"Owl monkey\", \"Mountain beaver\", \"Greater s‚Ä¶\n#&gt; $ genus        &lt;chr&gt; \"Acinonyx\", \"Aotus\", \"Aplodontia\", \"Blarina\", \"Bos\", \"‚Ä¶\n#&gt; $ vore         &lt;chr&gt; \"carni\", \"omni\", \"herbi\", \"omni\", \"herbi\", \"herbi\", \"c‚Ä¶\n#&gt; $ order        &lt;chr&gt; \"Carnivora\", \"Primates\", \"Rodentia\", \"Soricomorpha\", \"‚Ä¶\n#&gt; $ sleep_total  &lt;dbl&gt; 12.1, 17.0, 14.4, 14.9, 4.0, 14.4, 8.7, 7.0, 10.1, 3.0‚Ä¶\n#&gt; $ sleep_rem    &lt;dbl&gt; NA, 1.8, 2.4, 2.3, 0.7, 2.2, 1.4, NA, 2.9, NA, 0.6, 0.‚Ä¶\n#&gt; $ sleep_cycle  &lt;dbl&gt; NA, NA, NA, 0.1333333, 0.6666667, 0.7666667, 0.3833333‚Ä¶\n#&gt; $ brainwt      &lt;dbl&gt; NA, 0.01550, NA, 0.00029, 0.42300, NA, NA, NA, 0.07000‚Ä¶\n#&gt; $ bodywt       &lt;dbl&gt; 50.000, 0.480, 1.350, 0.019, 600.000, 3.850, 20.490, 0‚Ä¶\n\n\n\n\nUse select() to rename variables\nUse rename() to just change the name\n\nmsleep %&gt;%\n  rename( #&lt;&lt;\n    animal = name,\n    extinction_threat = conservation\n  ) %&gt;%\n  glimpse()\n\n#&gt; Rows: 83\n#&gt; Columns: 11\n#&gt; $ animal            &lt;chr&gt; \"Cheetah\", \"Owl monkey\", \"Mountain beaver\", \"Grea‚Ä¶\n#&gt; $ genus             &lt;chr&gt; \"Acinonyx\", \"Aotus\", \"Aplodontia\", \"Blarina\", \"Bo‚Ä¶\n#&gt; $ vore              &lt;chr&gt; \"carni\", \"omni\", \"herbi\", \"omni\", \"herbi\", \"herbi‚Ä¶\n#&gt; $ order             &lt;chr&gt; \"Carnivora\", \"Primates\", \"Rodentia\", \"Soricomorph‚Ä¶\n#&gt; $ extinction_threat &lt;chr&gt; \"lc\", NA, \"nt\", \"lc\", \"domesticated\", NA, \"vu\", N‚Ä¶\n#&gt; $ sleep_total       &lt;dbl&gt; 12.1, 17.0, 14.4, 14.9, 4.0, 14.4, 8.7, 7.0, 10.1‚Ä¶\n#&gt; $ sleep_rem         &lt;dbl&gt; NA, 1.8, 2.4, 2.3, 0.7, 2.2, 1.4, NA, 2.9, NA, 0.‚Ä¶\n#&gt; $ sleep_cycle       &lt;dbl&gt; NA, NA, NA, 0.1333333, 0.6666667, 0.7666667, 0.38‚Ä¶\n#&gt; $ awake             &lt;dbl&gt; 11.9, 7.0, 9.6, 9.1, 20.0, 9.6, 15.3, 17.0, 13.9,‚Ä¶\n#&gt; $ brainwt           &lt;dbl&gt; NA, 0.01550, NA, 0.00029, 0.42300, NA, NA, NA, 0.‚Ä¶\n#&gt; $ bodywt            &lt;dbl&gt; 50.000, 0.480, 1.350, 0.019, 600.000, 3.850, 20.4‚Ä¶\n\n\nUse select() to change the name and drop everything else\n\nmsleep %&gt;%\n  select( #&lt;&lt;\n    animal = name,\n    extinction_threat = conservation\n  ) %&gt;%\n  glimpse()\n\n#&gt; Rows: 83\n#&gt; Columns: 2\n#&gt; $ animal            &lt;chr&gt; \"Cheetah\", \"Owl monkey\", \"Mountain beaver\", \"Grea‚Ä¶\n#&gt; $ extinction_threat &lt;chr&gt; \"lc\", NA, \"nt\", \"lc\", \"domesticated\", NA, \"vu\", N‚Ä¶\n\n\n\n\nUse select() to rename variables\nUse rename() to just change the name\n\nmsleep %&gt;%\n  rename( #&lt;&lt;\n    animal = name,\n    extinction_threat = conservation\n  ) %&gt;%\n  glimpse()\n\n#&gt; Rows: 83\n#&gt; Columns: 11\n#&gt; $ animal            &lt;chr&gt; \"Cheetah\", \"Owl monkey\", \"Mountain beaver\", \"Grea‚Ä¶\n#&gt; $ genus             &lt;chr&gt; \"Acinonyx\", \"Aotus\", \"Aplodontia\", \"Blarina\", \"Bo‚Ä¶\n#&gt; $ vore              &lt;chr&gt; \"carni\", \"omni\", \"herbi\", \"omni\", \"herbi\", \"herbi‚Ä¶\n#&gt; $ order             &lt;chr&gt; \"Carnivora\", \"Primates\", \"Rodentia\", \"Soricomorph‚Ä¶\n#&gt; $ extinction_threat &lt;chr&gt; \"lc\", NA, \"nt\", \"lc\", \"domesticated\", NA, \"vu\", N‚Ä¶\n#&gt; $ sleep_total       &lt;dbl&gt; 12.1, 17.0, 14.4, 14.9, 4.0, 14.4, 8.7, 7.0, 10.1‚Ä¶\n#&gt; $ sleep_rem         &lt;dbl&gt; NA, 1.8, 2.4, 2.3, 0.7, 2.2, 1.4, NA, 2.9, NA, 0.‚Ä¶\n#&gt; $ sleep_cycle       &lt;dbl&gt; NA, NA, NA, 0.1333333, 0.6666667, 0.7666667, 0.38‚Ä¶\n#&gt; $ awake             &lt;dbl&gt; 11.9, 7.0, 9.6, 9.1, 20.0, 9.6, 15.3, 17.0, 13.9,‚Ä¶\n#&gt; $ brainwt           &lt;dbl&gt; NA, 0.01550, NA, 0.00029, 0.42300, NA, NA, NA, 0.‚Ä¶\n#&gt; $ bodywt            &lt;dbl&gt; 50.000, 0.480, 1.350, 0.019, 600.000, 3.850, 20.4‚Ä¶\n\n\nUse select() + everything() to change names and keep everything else\n\nmsleep %&gt;%\n  select( #&lt;&lt;\n    animal = name,\n    extinction_threat = conservation,\n    everything()\n  ) %&gt;% #&lt;&lt;\n  glimpse()\n\n#&gt; Rows: 83\n#&gt; Columns: 11\n#&gt; $ animal            &lt;chr&gt; \"Cheetah\", \"Owl monkey\", \"Mountain beaver\", \"Grea‚Ä¶\n#&gt; $ extinction_threat &lt;chr&gt; \"lc\", NA, \"nt\", \"lc\", \"domesticated\", NA, \"vu\", N‚Ä¶\n#&gt; $ genus             &lt;chr&gt; \"Acinonyx\", \"Aotus\", \"Aplodontia\", \"Blarina\", \"Bo‚Ä¶\n#&gt; $ vore              &lt;chr&gt; \"carni\", \"omni\", \"herbi\", \"omni\", \"herbi\", \"herbi‚Ä¶\n#&gt; $ order             &lt;chr&gt; \"Carnivora\", \"Primates\", \"Rodentia\", \"Soricomorph‚Ä¶\n#&gt; $ sleep_total       &lt;dbl&gt; 12.1, 17.0, 14.4, 14.9, 4.0, 14.4, 8.7, 7.0, 10.1‚Ä¶\n#&gt; $ sleep_rem         &lt;dbl&gt; NA, 1.8, 2.4, 2.3, 0.7, 2.2, 1.4, NA, 2.9, NA, 0.‚Ä¶\n#&gt; $ sleep_cycle       &lt;dbl&gt; NA, NA, NA, 0.1333333, 0.6666667, 0.7666667, 0.38‚Ä¶\n#&gt; $ awake             &lt;dbl&gt; 11.9, 7.0, 9.6, 9.1, 20.0, 9.6, 15.3, 17.0, 13.9,‚Ä¶\n#&gt; $ brainwt           &lt;dbl&gt; NA, 0.01550, NA, 0.00029, 0.42300, NA, NA, NA, 0.‚Ä¶\n#&gt; $ bodywt            &lt;dbl&gt; 50.000, 0.480, 1.350, 0.019, 600.000, 3.850, 20.4‚Ä¶",
    "crumbs": [
      "Data Preparation",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Tidy Data</span>"
    ]
  },
  {
    "objectID": "tidy_ch_4.html#recoding-variables",
    "href": "tidy_ch_4.html#recoding-variables",
    "title": "4¬† Tidy Data",
    "section": "4.6 Recoding Variables",
    "text": "4.6 Recoding Variables\n\n4.6.1 Recoding with ifelse()\nExample: Create a variable, cost_high, that is TRUE if the repair costs were greater than the median costs and FALSE otherwise.\n\nwildlife_impacts1 &lt;- wildlife_impacts %&gt;%\n  rename(cost = cost_repairs_infl_adj) %&gt;%\n  filter(!is.na(cost)) %&gt;%\n  mutate(\n    cost_median = median(cost),\n    cost_high = ifelse(cost &gt; cost_median, TRUE, FALSE) #&lt;&lt;\n  )\n\nwildlife_impacts1 %&gt;%\n  select(cost, cost_median, cost_high) %&gt;%\n  head()\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;     cost cost_median cost_high\n#&gt;    &lt;dbl&gt;       &lt;dbl&gt; &lt;lgl&gt;    \n#&gt; 1   1000       26783 FALSE    \n#&gt; 2    200       26783 FALSE    \n#&gt; 3  10000       26783 FALSE    \n#&gt; 4 100000       26783 TRUE     \n#&gt; 5  20000       26783 FALSE    \n#&gt; 6 487000       26783 TRUE\n\n\n\n\n4.6.2 Recoding with nested ifelse()\nCreate a variable, season, based on the incident_month variable.\n\nwildlife_impacts2 &lt;- wildlife_impacts %&gt;%\n  mutate(season = ifelse( #&lt;&lt;\n    incident_month %in% c(3, 4, 5), 'spring', ifelse( #&lt;&lt;\n    incident_month %in% c(6, 7, 8), 'summer', ifelse( #&lt;&lt;\n    incident_month %in% c(9, 10, 11), 'fall', 'winter'))) #&lt;&lt;\n  ) \n\nwildlife_impacts2 %&gt;%\n  distinct(incident_month, season) %&gt;%\n  head()\n\n#&gt; # A tibble: 6 √ó 2\n#&gt;   incident_month season\n#&gt;            &lt;dbl&gt; &lt;chr&gt; \n#&gt; 1             12 winter\n#&gt; 2             11 fall  \n#&gt; 3             10 fall  \n#&gt; 4              9 fall  \n#&gt; 5              8 summer\n#&gt; 6              7 summer\n\n\n\n\n4.6.3 Recoding with case_when()\nCreate a variable, season, based on the incident_month variable.\nNote: If you don‚Äôt include the final TRUE ~ 'winter' condition, you‚Äôll get NA for those cases.\n\nwildlife_impacts2 &lt;- wildlife_impacts %&gt;%\n  mutate(season = case_when( #&lt;&lt;\n    incident_month %in% c(3, 4, 5) ~ 'spring', #&lt;&lt;\n    incident_month %in% c(6, 7, 8) ~ 'summer', #&lt;&lt;\n    incident_month %in% c(9, 10, 11) ~ 'fall', #&lt;&lt;\n    TRUE ~ 'winter') #&lt;&lt;\n  ) \n\nwildlife_impacts2 %&gt;%\n  distinct(incident_month, season) %&gt;%\n  head()\n\n#&gt; # A tibble: 6 √ó 2\n#&gt;   incident_month season\n#&gt;            &lt;dbl&gt; &lt;chr&gt; \n#&gt; 1             12 winter\n#&gt; 2             11 fall  \n#&gt; 3             10 fall  \n#&gt; 4              9 fall  \n#&gt; 5              8 summer\n#&gt; 6              7 summer\n\n\n\nRecoding with case_when() with between()\nCreate a variable, season, based on the incident_month variable.\n\nwildlife_impacts2 &lt;- wildlife_impacts %&gt;%\n  mutate(season = case_when(\n    between(incident_month, 3, 5) ~ 'spring', #&lt;&lt;\n    between(incident_month, 6, 8) ~ 'summer', #&lt;&lt;\n    between(incident_month, 9, 11) ~ 'fall', #&lt;&lt;\n    TRUE ~ 'winter') \n  )\n\nwildlife_impacts2 %&gt;%\n    distinct(incident_month, season) %&gt;%\n    head()\n\n#&gt; # A tibble: 6 √ó 2\n#&gt;   incident_month season\n#&gt;            &lt;dbl&gt; &lt;chr&gt; \n#&gt; 1             12 winter\n#&gt; 2             11 fall  \n#&gt; 3             10 fall  \n#&gt; 4              9 fall  \n#&gt; 5              8 summer\n#&gt; 6              7 summer\n\n\n\n\ncase_when() is ‚Äúcleaner‚Äù than ifelse()\nConvert the num_engs variable into a word of the number.\nifelse()\n\nwildlife_impacts3 &lt;- wildlife_impacts %&gt;%\n  mutate(num_engs = ifelse(\n    num_engs == 1, 'one', ifelse(\n    num_engs == 2, 'two', ifelse(\n    num_engs == 3, 'three', ifelse(\n    num_engs == 4, 'four',\n    as.character(num_engs)))))\n  )\n\nunique(wildlife_impacts3$num_engs)\n\n#&gt; [1] \"two\"   NA      \"three\" \"four\"  \"one\"\n\n\ncase_when()\n\nwildlife_impacts3 &lt;- wildlife_impacts %&gt;%\n  mutate(num_engs = case_when(\n    num_engs == 1 ~ 'one',\n    num_engs == 2 ~ 'two',\n    num_engs == 3 ~ 'three',\n    num_engs == 4 ~ 'four')\n  )\n\nunique(wildlife_impacts3$num_engs)\n\n#&gt; [1] \"two\"   NA      \"three\" \"four\"  \"one\"\n\n\n\n\n\n4.6.4 Break a single variable into two with separate()\n\ntb_rates\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;   country      year rate             \n#&gt;   &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;            \n#&gt; 1 Afghanistan  1999 745/19987071     \n#&gt; 2 Afghanistan  2000 2666/20595360    \n#&gt; 3 Brazil       1999 37737/172006362  \n#&gt; 4 Brazil       2000 80488/174504898  \n#&gt; 5 China        1999 212258/1272915272\n#&gt; 6 China        2000 213766/1280428583\n\n\n\ntb_rates %&gt;%\n  separate(rate, into = c(\"cases\", \"population\")) #&lt;&lt;\n\n#&gt; # A tibble: 6 √ó 4\n#&gt;   country      year cases  population\n#&gt;   &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;     \n#&gt; 1 Afghanistan  1999 745    19987071  \n#&gt; 2 Afghanistan  2000 2666   20595360  \n#&gt; 3 Brazil       1999 37737  172006362 \n#&gt; 4 Brazil       2000 80488  174504898 \n#&gt; 5 China        1999 212258 1272915272\n#&gt; 6 China        2000 213766 1280428583\n\n\n\n\n4.6.5 Break a single variable into two with separate()\n\ntb_rates\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;   country      year rate             \n#&gt;   &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;            \n#&gt; 1 Afghanistan  1999 745/19987071     \n#&gt; 2 Afghanistan  2000 2666/20595360    \n#&gt; 3 Brazil       1999 37737/172006362  \n#&gt; 4 Brazil       2000 80488/174504898  \n#&gt; 5 China        1999 212258/1272915272\n#&gt; 6 China        2000 213766/1280428583\n\n\n\ntb_rates %&gt;%\n  separate(\n      rate, #&lt;&lt;\n      into = c(\"cases\", \"population\"), #&lt;&lt;\n      sep = \"/\" #&lt;&lt;\n  )\n\n#&gt; # A tibble: 6 √ó 4\n#&gt;   country      year cases  population\n#&gt;   &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;     \n#&gt; 1 Afghanistan  1999 745    19987071  \n#&gt; 2 Afghanistan  2000 2666   20595360  \n#&gt; 3 Brazil       1999 37737  172006362 \n#&gt; 4 Brazil       2000 80488  174504898 \n#&gt; 5 China        1999 212258 1272915272\n#&gt; 6 China        2000 213766 1280428583\n\n\n\ntb_rates\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;   country      year rate             \n#&gt;   &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;            \n#&gt; 1 Afghanistan  1999 745/19987071     \n#&gt; 2 Afghanistan  2000 2666/20595360    \n#&gt; 3 Brazil       1999 37737/172006362  \n#&gt; 4 Brazil       2000 80488/174504898  \n#&gt; 5 China        1999 212258/1272915272\n#&gt; 6 China        2000 213766/1280428583\n\n\n\ntb_rates %&gt;%\n  separate(\n      rate, \n      into = c(\"cases\", \"population\"),\n      sep = \"/\", \n      convert = TRUE #&lt;&lt;\n  )\n\n#&gt; # A tibble: 6 √ó 4\n#&gt;   country      year  cases population\n#&gt;   &lt;chr&gt;       &lt;dbl&gt;  &lt;int&gt;      &lt;int&gt;\n#&gt; 1 Afghanistan  1999    745   19987071\n#&gt; 2 Afghanistan  2000   2666   20595360\n#&gt; 3 Brazil       1999  37737  172006362\n#&gt; 4 Brazil       2000  80488  174504898\n#&gt; 5 China        1999 212258 1272915272\n#&gt; 6 China        2000 213766 1280428583\n\n\nYou can also break up a variable by an index\n\ntb_rates\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;   country      year rate             \n#&gt;   &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;            \n#&gt; 1 Afghanistan  1999 745/19987071     \n#&gt; 2 Afghanistan  2000 2666/20595360    \n#&gt; 3 Brazil       1999 37737/172006362  \n#&gt; 4 Brazil       2000 80488/174504898  \n#&gt; 5 China        1999 212258/1272915272\n#&gt; 6 China        2000 213766/1280428583\n\n\n\ntb_rates %&gt;%\n  separate(\n      year, \n      into = c(\"century\", \"year\"), #&lt;&lt;\n      sep = 2 #&lt;&lt;\n  )\n\n#&gt; # A tibble: 6 √ó 4\n#&gt;   country     century year  rate             \n#&gt;   &lt;chr&gt;       &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;            \n#&gt; 1 Afghanistan 19      99    745/19987071     \n#&gt; 2 Afghanistan 20      00    2666/20595360    \n#&gt; 3 Brazil      19      99    37737/172006362  \n#&gt; 4 Brazil      20      00    80488/174504898  \n#&gt; 5 China       19      99    212258/1272915272\n#&gt; 6 China       20      00    213766/1280428583\n\n\n\n\n4.6.6 unite(): The opposite of separate()\n\ntb_rates\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;   country      year rate             \n#&gt;   &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;            \n#&gt; 1 Afghanistan  1999 745/19987071     \n#&gt; 2 Afghanistan  2000 2666/20595360    \n#&gt; 3 Brazil       1999 37737/172006362  \n#&gt; 4 Brazil       2000 80488/174504898  \n#&gt; 5 China        1999 212258/1272915272\n#&gt; 6 China        2000 213766/1280428583\n\n\n\ntb_rates %&gt;%\n  separate(year, into = c(\"century\", \"year\"),\n           sep = 2) %&gt;%\n  unite(year_new, century, year) #&lt;&lt;\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;   country     year_new rate             \n#&gt;   &lt;chr&gt;       &lt;chr&gt;    &lt;chr&gt;            \n#&gt; 1 Afghanistan 19_99    745/19987071     \n#&gt; 2 Afghanistan 20_00    2666/20595360    \n#&gt; 3 Brazil      19_99    37737/172006362  \n#&gt; 4 Brazil      20_00    80488/174504898  \n#&gt; 5 China       19_99    212258/1272915272\n#&gt; 6 China       20_00    213766/1280428583\n\n\n\ntb_rates\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;   country      year rate             \n#&gt;   &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;            \n#&gt; 1 Afghanistan  1999 745/19987071     \n#&gt; 2 Afghanistan  2000 2666/20595360    \n#&gt; 3 Brazil       1999 37737/172006362  \n#&gt; 4 Brazil       2000 80488/174504898  \n#&gt; 5 China        1999 212258/1272915272\n#&gt; 6 China        2000 213766/1280428583\n\n\n\ntb_rates %&gt;%\n  separate(year, into = c(\"century\", \"year\"),\n           sep = 2) %&gt;%\n  unite(year_new, century, year,\n        sep = \"\") #&lt;&lt;\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;   country     year_new rate             \n#&gt;   &lt;chr&gt;       &lt;chr&gt;    &lt;chr&gt;            \n#&gt; 1 Afghanistan 1999     745/19987071     \n#&gt; 2 Afghanistan 2000     2666/20595360    \n#&gt; 3 Brazil      1999     37737/172006362  \n#&gt; 4 Brazil      2000     80488/174504898  \n#&gt; 5 China       1999     212258/1272915272\n#&gt; 6 China       2000     213766/1280428583",
    "crumbs": [
      "Data Preparation",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Tidy Data</span>"
    ]
  },
  {
    "objectID": "tidy_ch_4.html#dealing-with-dates-data",
    "href": "tidy_ch_4.html#dealing-with-dates-data",
    "title": "4¬† Tidy Data",
    "section": "4.7 Dealing with Dates Data",
    "text": "4.7 Dealing with Dates Data\n\n\n\n\n4.7.1 Create Dates from Strings\norder is the ONLY thing that matters!\n\nYear-Month-Day\n\nymd('2020-02-26')\n\n#&gt; [1] \"2020-02-26\"\n\n\n\nymd('2020-02-26')\n\n#&gt; [1] \"2020-02-26\"\n\nymd('2020 Feb 26')\n\n#&gt; [1] \"2020-02-26\"\n\n\n\nymd('2020-02-26')\n\n#&gt; [1] \"2020-02-26\"\n\nymd('2020 Feb 26')\n\n#&gt; [1] \"2020-02-26\"\n\nymd('2020 Feb. 26')\n\n#&gt; [1] \"2020-02-26\"\n\nymd('2020 february 26')\n\n#&gt; [1] \"2020-02-26\"\n\n\n\n\nMonth-Day-Year\n\nmdy('February 26, 2020')\n\n#&gt; [1] \"2020-02-26\"\n\nmdy('Feb. 26, 2020')\n\n#&gt; [1] \"2020-02-26\"\n\nmdy('Feb 26 2020')\n\n#&gt; [1] \"2020-02-26\"\n\n\n\n\nDay-Month-Year\n\ndmy('26 February 2020')\n\n#&gt; [1] \"2020-02-26\"\n\ndmy('26 Feb. 2020')\n\n#&gt; [1] \"2020-02-26\"\n\ndmy('26 Feb, 2020')\n\n#&gt; [1] \"2020-02-26\"\n\n\n\nCheck out the lubridate cheat sheet\n\n\n\n\n4.7.2 Extracting information from dates\n\ndate &lt;- today()\ndate\n\n#&gt; [1] \"2024-07-01\"\n\n\n\n# Get the year\nyear(date)\n\n#&gt; [1] 2024\n\n\n\ndate &lt;- today()\ndate\n\n#&gt; [1] \"2024-07-01\"\n\n\n\n# Get the year\nyear(date)\n\n#&gt; [1] 2024\n\n# Get the month\nmonth(date)\n\n#&gt; [1] 7\n\n# Get the month name\nmonth(date, label = TRUE, abbr = FALSE)\n\n#&gt; [1] July\n#&gt; 12 Levels: January &lt; February &lt; March &lt; April &lt; May &lt; June &lt; ... &lt; December\n\n\n\n# Get the day\nday(date)\n\n#&gt; [1] 1\n\n# Get the weekday\nwday(date)\n\n#&gt; [1] 2\n\n# Get the weekday name\nwday(date, label = TRUE, abbr = TRUE)\n\n#&gt; [1] Mon\n#&gt; Levels: Sun &lt; Mon &lt; Tue &lt; Wed &lt; Thu &lt; Fri &lt; Sat\n\n\n\n\n4.7.3 Modifying date elements\n\ndate &lt;- today()\ndate\n\n#&gt; [1] \"2024-07-01\"\n\n\n\n# Change the year\nyear(date) &lt;- 2016\ndate\n\n#&gt; [1] \"2016-07-01\"\n\n\n\n# Change the day\nday(date) &lt;- 30\n\n\ndate\n\n#&gt; [1] \"2016-07-30\"",
    "crumbs": [
      "Data Preparation",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Tidy Data</span>"
    ]
  },
  {
    "objectID": "tidy_ch_4.html#strategies-for-dealing-with-messy-excel-files",
    "href": "tidy_ch_4.html#strategies-for-dealing-with-messy-excel-files",
    "title": "4¬† Tidy Data",
    "section": "4.8 Strategies for Dealing with Messy Excel Files",
    "text": "4.8 Strategies for Dealing with Messy Excel Files\nExample: When columns are repeated; like in the data for the winners of Nathan‚Äôs hot dog eating contest.\n\nStrategies\n\n1. divide & conquer\n\n\n2. pivot long, separate, pivot wide\n\n\n\n\n\n\nStrategy 1: divide & conquer\nSteps:\n\nRead in the data\nClean the names\nRemove * note at bottom of table\n\n\nhot_dogs &lt;- read_excel(\n    here::here('data', 'hot_dog_winners.xlsx'),\n    sheet = 'hot_dog_winners') %&gt;%\n    clean_names() %&gt;%\n    dplyr::filter(!is.na(mens))\n\nglimpse(hot_dogs)\n\n#&gt; Rows: 40\n#&gt; Columns: 7\n#&gt; $ year         &lt;chr&gt; \"1980\", \"1981\", \"1982\", \"1983\", \"1984\", \"1985\", \"1986\"‚Ä¶\n#&gt; $ mens         &lt;chr&gt; \"Paul Siederman & Joe Baldini\", \"Thomas DeBerry\", \"Ste‚Ä¶\n#&gt; $ dogs_eaten_3 &lt;chr&gt; \"9.1\", \"11\", \"11\", \"19.5\", \"9.5\", \"11.75\", \"15.5\", \"12‚Ä¶\n#&gt; $ country_4    &lt;chr&gt; \"United States\", \"United States\", \"United States\", \"Me‚Ä¶\n#&gt; $ womens       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA‚Ä¶\n#&gt; $ dogs_eaten_6 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA‚Ä¶\n#&gt; $ country_7    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA‚Ä¶\n\n\nSteps\n\nRead in the data\nClean the names\nRemove * note at bottom of table\nSplit data into two competitions with the same variable names\nCreate new variable in each data frame: competition\n\n\nhot_dogs_m &lt;- hot_dogs %&gt;%\n    select(\n        year,\n        competitor = mens,\n        dogs_eaten = dogs_eaten_3,\n        country    = country_4) %&gt;%\n    mutate(competition = 'Mens') #&lt;&lt;\n\nhot_dogs_w &lt;- hot_dogs %&gt;%\n    select(\n        year,\n        competitor = womens,\n        dogs_eaten = dogs_eaten_6,\n        country    = country_7) %&gt;%\n    mutate(competition = 'Womens') %&gt;% #&lt;&lt;\n    dplyr::filter(!is.na(competitor))\n\nSteps\n\nRead in the data\nClean the names\nRemove * note at bottom of table\nSplit data into two competitions with the same variable names\nCreate new variable in each data frame: competition\nMerge data together with bind_rows()\nClean up final data frame\n\n\nhot_dogs &lt;- bind_rows(hot_dogs_m, hot_dogs_w) %&gt;% #&lt;&lt;\n    mutate(\n        new_record = str_detect(dogs_eaten, \"\\\\*\"),\n        dogs_eaten = parse_number(dogs_eaten),\n        year       = as.numeric(year))\n\nglimpse(hot_dogs)\n\n#&gt; Rows: 49\n#&gt; Columns: 6\n#&gt; $ year        &lt;dbl&gt; 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1‚Ä¶\n#&gt; $ competitor  &lt;chr&gt; \"Paul Siederman & Joe Baldini\", \"Thomas DeBerry\", \"Stev‚Ä¶\n#&gt; $ dogs_eaten  &lt;dbl&gt; 9.10, 11.00, 11.00, 19.50, 9.50, 11.75, 15.50, 12.00, 1‚Ä¶\n#&gt; $ country     &lt;chr&gt; \"United States\", \"United States\", \"United States\", \"Mex‚Ä¶\n#&gt; $ competition &lt;chr&gt; \"Mens\", \"Mens\", \"Mens\", \"Mens\", \"Mens\", \"Mens\", \"Mens\",‚Ä¶\n#&gt; $ new_record  &lt;lgl&gt; FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,‚Ä¶\n\n\n\n\nhead(hot_dogs)\n\n#&gt; # A tibble: 6 √ó 6\n#&gt;    year competitor                  dogs_eaten country competition new_record\n#&gt;   &lt;dbl&gt; &lt;chr&gt;                            &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;       &lt;lgl&gt;     \n#&gt; 1  1980 Paul Siederman & Joe Baldi‚Ä¶        9.1 United‚Ä¶ Mens        FALSE     \n#&gt; 2  1981 Thomas DeBerry                    11   United‚Ä¶ Mens        FALSE     \n#&gt; 3  1982 Steven Abrams                     11   United‚Ä¶ Mens        FALSE     \n#&gt; 4  1983 Luis Llamas                       19.5 Mexico  Mens        FALSE     \n#&gt; 5  1984 Birgit Felden                      9.5 Germany Mens        FALSE     \n#&gt; 6  1985 Oscar Rodriguez                   11.8 United‚Ä¶ Mens        FALSE\n\n\n\n\nStrategy 2: pivot long, separate, pivot wide\nSteps:\n\nRead in the data\nClean the names\nRemove * note at bottom of table\n\n\nhot_dogs &lt;- read_excel(\n    here::here('data', 'hot_dog_winners.xlsx'),\n    sheet = 'hot_dog_winners') %&gt;%\n    clean_names() %&gt;%\n    dplyr::filter(!is.na(mens))\n\nglimpse(hot_dogs)\n\n#&gt; Rows: 40\n#&gt; Columns: 7\n#&gt; $ year         &lt;chr&gt; \"1980\", \"1981\", \"1982\", \"1983\", \"1984\", \"1985\", \"1986\"‚Ä¶\n#&gt; $ mens         &lt;chr&gt; \"Paul Siederman & Joe Baldini\", \"Thomas DeBerry\", \"Ste‚Ä¶\n#&gt; $ dogs_eaten_3 &lt;chr&gt; \"9.1\", \"11\", \"11\", \"19.5\", \"9.5\", \"11.75\", \"15.5\", \"12‚Ä¶\n#&gt; $ country_4    &lt;chr&gt; \"United States\", \"United States\", \"United States\", \"Me‚Ä¶\n#&gt; $ womens       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA‚Ä¶\n#&gt; $ dogs_eaten_6 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA‚Ä¶\n#&gt; $ country_7    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA‚Ä¶\n\n\nSteps:\n\nRead in the data\nClean the names\nRemove * note at bottom of table\nRename variables\nGather all the ‚Äújoint‚Äù variables\n\n\nhot_dogs &lt;- hot_dogs %&gt;%\n    select(\n        year,\n        competitor.mens   = mens,\n        competitor.womens = womens,\n        dogs_eaten.mens   = dogs_eaten_3,\n        dogs_eaten.womens = dogs_eaten_6,\n        country.mens      = country_4,\n        country.womens    = country_7) %&gt;%\n    pivot_longer(names_to = 'variable', values_to = 'value',  #&lt;&lt;\n           competitor.mens:country.womens)  #&lt;&lt;\n\nhead(hot_dogs, 3)\n\n#&gt; # A tibble: 3 √ó 3\n#&gt;   year  variable          value                       \n#&gt;   &lt;chr&gt; &lt;chr&gt;             &lt;chr&gt;                       \n#&gt; 1 1980  competitor.mens   Paul Siederman & Joe Baldini\n#&gt; 2 1980  competitor.womens &lt;NA&gt;                        \n#&gt; 3 1980  dogs_eaten.mens   9.1\n\n\nSteps:\n\nRead in the data\nClean the names\nRemove * note at bottom of table\nRename variables\nGather all the ‚Äújoint‚Äù variables\nSeparate ‚Äújoint‚Äù variables into components\n\n\nhot_dogs &lt;- hot_dogs %&gt;%\n    separate(variable, into = c('variable', 'competition'),  #&lt;&lt;\n             sep = '\\\\.') #&lt;&lt;\n\nhead(hot_dogs)\n\n#&gt; # A tibble: 6 √ó 4\n#&gt;   year  variable   competition value                       \n#&gt;   &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;                       \n#&gt; 1 1980  competitor mens        Paul Siederman & Joe Baldini\n#&gt; 2 1980  competitor womens      &lt;NA&gt;                        \n#&gt; 3 1980  dogs_eaten mens        9.1                         \n#&gt; 4 1980  dogs_eaten womens      &lt;NA&gt;                        \n#&gt; 5 1980  country    mens        United States               \n#&gt; 6 1980  country    womens      &lt;NA&gt;\n\n\nSteps:\n\nRead in the data\nClean the names\nRemove * note at bottom of table\nRename variables\nGather all the ‚Äújoint‚Äù variables\nSeparate ‚Äújoint‚Äù variables into components\nSpread variable and value back to columns\nClean up final data frame\n\n\nhot_dogs &lt;- hot_dogs %&gt;%\n    spread(key = variable, value = value) %&gt;% #&lt;&lt;\n    mutate(\n        new_record = str_detect(dogs_eaten, \"\\\\*\"),\n        dogs_eaten = parse_number(dogs_eaten),\n        year       = as.numeric(year))\n\nglimpse(hot_dogs)\n\n#&gt; Rows: 80\n#&gt; Columns: 6\n#&gt; $ year        &lt;dbl&gt; 1980, 1980, 1981, 1981, 1982, 1982, 1983, 1983, 1984, 1‚Ä¶\n#&gt; $ competition &lt;chr&gt; \"mens\", \"womens\", \"mens\", \"womens\", \"mens\", \"womens\", \"‚Ä¶\n#&gt; $ competitor  &lt;chr&gt; \"Paul Siederman & Joe Baldini\", NA, \"Thomas DeBerry\", N‚Ä¶\n#&gt; $ country     &lt;chr&gt; \"United States\", NA, \"United States\", NA, \"United State‚Ä¶\n#&gt; $ dogs_eaten  &lt;dbl&gt; 9.10, NA, 11.00, NA, 11.00, NA, 19.50, NA, 9.50, NA, 11‚Ä¶\n#&gt; $ new_record  &lt;lgl&gt; FALSE, NA, FALSE, NA, FALSE, NA, FALSE, NA, FALSE, NA, ‚Ä¶\n\n\n\n\nDivide & conquer\n\nhot_dogs &lt;- read_excel(\n    here::here('data', 'hot_dog_winners.xlsx'),\n    sheet = 'hot_dog_winners') %&gt;%\n    clean_names() %&gt;%\n    dplyr::filter(!is.na(mens))\n\n# Divide #&lt;&lt;\nhot_dogs_m &lt;- hot_dogs %&gt;% #&lt;&lt;\n    select( #&lt;&lt;\n        year, #&lt;&lt;\n        competitor = mens, #&lt;&lt;\n        dogs_eaten = dogs_eaten_3, #&lt;&lt;\n        country    = country_4) %&gt;% #&lt;&lt;\n    mutate(competition = 'Mens') #&lt;&lt;\nhot_dogs_w &lt;- hot_dogs %&gt;% #&lt;&lt;\n    select( #&lt;&lt;\n        year, #&lt;&lt;\n        competitor = womens, #&lt;&lt;\n        dogs_eaten = dogs_eaten_6, #&lt;&lt;\n        country    = country_7) %&gt;% #&lt;&lt;\n    mutate(competition = 'Womens') %&gt;%  #&lt;&lt;\n    dplyr::filter(!is.na(competitor)) #&lt;&lt;\n\n# Merge and finish cleaning\nhot_dogs &lt;- bind_rows(hot_dogs_m, hot_dogs_w) %&gt;% #&lt;&lt;\n    mutate(\n        new_record = str_detect(dogs_eaten, \"\\\\*\"),\n        dogs_eaten = parse_number(dogs_eaten),\n        year       = as.numeric(year))\n\n\n\nPivot long, separate, pivot wide\n\nhot_dogs &lt;- read_excel(\n    here::here('data', 'hot_dog_winners.xlsx'),\n    sheet = 'hot_dog_winners') %&gt;%\n    clean_names() %&gt;%\n    dplyr::filter(!is.na(mens)) %&gt;%\n\n    # Rename variables #&lt;&lt;\n    select( #&lt;&lt;\n        year, #&lt;&lt;\n        competitor.mens   = mens, #&lt;&lt;\n        competitor.womens = womens, #&lt;&lt;\n        dogs_eaten.mens   = dogs_eaten_3, #&lt;&lt;\n        dogs_eaten.womens = dogs_eaten_6, #&lt;&lt;\n        country.mens      = country_4, #&lt;&lt;\n        country.womens    = country_7) %&gt;% #&lt;&lt;\n    # Gather \"joint\" variables #&lt;&lt;\n    pivot_longer(names_to = 'variable', values_to = 'value', #&lt;&lt;\n           competitor.mens:country.womens) %&gt;%  #&lt;&lt;\n    # Separate \"joint\" variables #&lt;&lt;\n    separate(variable, into = c('variable', 'competition'), #&lt;&lt;\n             sep = '\\\\.') %&gt;%  #&lt;&lt;\n    # Spread \"joint\" variables #&lt;&lt;\n    pivot_wider(names_from = variable, values_from = value) %&gt;% #&lt;&lt;\n    # Finish cleaning\n    mutate(\n        new_record = str_detect(dogs_eaten, \"\\\\*\"),\n        dogs_eaten = parse_number(dogs_eaten),\n        year       = as.numeric(year))\n\n\n\n\n\nStrategies for dealing with sub-headers\nExample: OICA passenger car sales data\n\n\n\nSteps:\n\nRead in the data, skipping first 5 rows\nClean the names\n\n\npc_sales &lt;- read_excel(\n    here::here('data', 'pc_sales_2018.xlsx'),\n    sheet = 'pc_sales', skip = 5) %&gt;% #&lt;&lt;\n    clean_names() %&gt;%\n    rename(country = regions_countries)\n\nglimpse(pc_sales)\n\n#&gt; Rows: 160\n#&gt; Columns: 18\n#&gt; $ country &lt;chr&gt; NA, \"EUROPE\", \"EU 28 countries + EFTA\", \"EU 15 countries + ‚Ä¶\n#&gt; $ x2      &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,‚Ä¶\n#&gt; $ x3      &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,‚Ä¶\n#&gt; $ x4      &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,‚Ä¶\n#&gt; $ x2005   &lt;dbl&gt; NA, 17906455, 15622035, 14565695, 307915, 480088, 148819, 1‚Ä¶\n#&gt; $ x2006   &lt;dbl&gt; NA, 18685556, 15961138, 14820182, 308594, 526141, 156936, 1‚Ä¶\n#&gt; $ x2007   &lt;dbl&gt; NA, 19618588, 16147274, 14842186, 298182, 524795, 162686, 1‚Ä¶\n#&gt; $ x2008   &lt;dbl&gt; NA, 18821599, 14911880, 13602038, 293697, 535947, 150199, 1‚Ä¶\n#&gt; $ x2009   &lt;dbl&gt; NA, 16608761, 14533115, 13668808, 319403, 476194, 112454, 9‚Ä¶\n#&gt; $ x2010   &lt;dbl&gt; NA, 16499863, 13830694, 12984549, 328563, 547340, 153858, 1‚Ä¶\n#&gt; $ x2011   &lt;dbl&gt; NA, 17167600, 13642659, 12815435, 356145, 572211, 170036, 1‚Ä¶\n#&gt; $ x2012   &lt;dbl&gt; NA, 16191269, 12567903, 11773281, 336010, 486737, 170763, 1‚Ä¶\n#&gt; $ x2013   &lt;dbl&gt; NA, 15942273, 12344415, 11555153, 319035, 486065, 182086, 1‚Ä¶\n#&gt; $ x2014   &lt;dbl&gt; NA, 16154279, 13061461, 12148648, 303318, 482939, 189055, 1‚Ä¶\n#&gt; $ x2015   &lt;dbl&gt; NA, 16410563, 14287881, 13261258, 308555, 501066, 207717, 1‚Ä¶\n#&gt; $ x2016   &lt;dbl&gt; NA, 17291819, 15160239, 13971468, 329604, 539519, 222924, 1‚Ä¶\n#&gt; $ x2017   &lt;dbl&gt; NA, 17974281, 15631283, 14320223, 353320, 546558, 221821, 1‚Ä¶\n#&gt; $ x2018   &lt;dbl&gt; NA, 17912336, 15626509, 14210016, 341068, 549632, 218566, 1‚Ä¶\n\n\nSteps:\n\nRead in the data, skipping first 5 rows\nClean the names\nDrop bad columns\nFilter out bad rows\n\nUse datapasta to get rows to drop\n\ndrop &lt;- c(\n    'EUROPE', 'EU 28 countries + EFTA',\n    'EU 15 countries + EFTA', 'EUROPE NEW MEMBERS',\n    'RUSSIA, TURKEY & OTHER EUROPE', 'AMERICA',\n    'NAFTA', 'CENTRAL & SOUTH AMERICA',\n    'ASIA/OCEANIA/MIDDLE EAST', 'AFRICA', 'ALL COUNTRIES')\n\npc_sales &lt;- pc_sales %&gt;%\n    select(-c(x2:x4)) %&gt;%       # Drop bad columns\n    filter(! country %in% drop, # Drop bad rows #&lt;&lt;\n           ! is.na(country))\n\nhead(pc_sales)\n\n#&gt; # A tibble: 6 √ó 15\n#&gt;   country   x2005   x2006   x2007   x2008   x2009  x2010  x2011  x2012  x2013\n#&gt;   &lt;chr&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n#&gt; 1 AUSTRIA  307915  308594  298182  293697  319403 3.29e5 3.56e5 3.36e5 3.19e5\n#&gt; 2 BELGIUM  480088  526141  524795  535947  476194 5.47e5 5.72e5 4.87e5 4.86e5\n#&gt; 3 DENMARK  148819  156936  162686  150199  112454 1.54e5 1.70e5 1.71e5 1.82e5\n#&gt; 4 FINLAND  148161  145700  125608  139669   90574 1.12e5 1.26e5 1.11e5 1.03e5\n#&gt; 5 FRANCE  2118042 2045745 2109672 2091369 2302398 2.25e6 2.20e6 1.90e6 1.79e6\n#&gt; 6 GERMANY 3319259 3467961 3148163 3090040 3807175 2.92e6 3.17e6 3.08e6 2.95e6\n#&gt; # ‚Ñπ 5 more variables: x2014 &lt;dbl&gt;, x2015 &lt;dbl&gt;, x2016 &lt;dbl&gt;, x2017 &lt;dbl&gt;,\n#&gt; #   x2018 &lt;dbl&gt;\n\n\nSteps:\n\nRead in the data, skipping first 5 rows\nClean the names\nDrop bad columns\nFilter out bad rows\nGather the year variables\n\n\npc_sales &lt;- pc_sales %&gt;%\n    pivot_longer(names_to = 'year', values_to = 'num_cars', \n                 cols = x2005:x2018) #&lt;&lt;\n\nhead(pc_sales)\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;   country year  num_cars\n#&gt;   &lt;chr&gt;   &lt;chr&gt;    &lt;dbl&gt;\n#&gt; 1 AUSTRIA x2005   307915\n#&gt; 2 AUSTRIA x2006   308594\n#&gt; 3 AUSTRIA x2007   298182\n#&gt; 4 AUSTRIA x2008   293697\n#&gt; 5 AUSTRIA x2009   319403\n#&gt; 6 AUSTRIA x2010   328563\n\n\nSteps:\n\nRead in the data, skipping first 5 rows\nClean the names\nDrop bad columns\nFilter out bad rows\nGather the year variables\nSeparate the ‚Äúx‚Äù from the year\n\n\npc_sales &lt;- pc_sales %&gt;%\n    separate(year, into = c('drop', 'year'), sep = 'x', #&lt;&lt;\n             convert = TRUE) #&lt;&lt;\n\nhead(pc_sales)\n\n#&gt; # A tibble: 6 √ó 4\n#&gt;   country drop   year num_cars\n#&gt;   &lt;chr&gt;   &lt;lgl&gt; &lt;int&gt;    &lt;dbl&gt;\n#&gt; 1 AUSTRIA NA     2005   307915\n#&gt; 2 AUSTRIA NA     2006   308594\n#&gt; 3 AUSTRIA NA     2007   298182\n#&gt; 4 AUSTRIA NA     2008   293697\n#&gt; 5 AUSTRIA NA     2009   319403\n#&gt; 6 AUSTRIA NA     2010   328563\n\n\nSteps:\n\nRead in the data, skipping first 5 rows\nClean the names\nDrop bad columns\nFilter out bad rows\nGather the year variables\nSeparate the ‚Äúx‚Äù from the year\nRemove the drop column\nFinish cleaning\n\n\npc_sales &lt;- pc_sales %&gt;%\n  select(-drop) %&gt;%  #&lt;&lt;\n  mutate(country  = str_to_title(country))\n\nhead(pc_sales)\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;   country  year num_cars\n#&gt;   &lt;chr&gt;   &lt;int&gt;    &lt;dbl&gt;\n#&gt; 1 Austria  2005   307915\n#&gt; 2 Austria  2006   308594\n#&gt; 3 Austria  2007   298182\n#&gt; 4 Austria  2008   293697\n#&gt; 5 Austria  2009   319403\n#&gt; 6 Austria  2010   328563\n\n\n\nWhat if I wanted to keep the continents?\n\n\n\nStrategy: Join a new data frame linking country -&gt; continent\n\ndrop &lt;- c(\n  'EUROPE', 'EU 28 countries + EFTA',\n  'EU 15 countries + EFTA', 'EUROPE NEW MEMBERS',\n  'RUSSIA, TURKEY & OTHER EUROPE', 'AMERICA',\n  'NAFTA', 'CENTRAL & SOUTH AMERICA',\n  'ASIA/OCEANIA/MIDDLE EAST', 'AFRICA', 'ALL COUNTRIES')\n\npc_sales &lt;- read_excel(\n  here::here('data', 'pc_sales_2018.xlsx'),\n  sheet = 'pc_sales', skip = 5) %&gt;%\n  clean_names() %&gt;%\n  rename(country = regions_countries) %&gt;% \n  select(-c(x2:x4)) %&gt;%       # Drop bad columns\n  filter(! country %in% drop, # Drop bad rows\n         ! is.na(country)) %&gt;% \n  pivot_longer(\n    names_to = 'year', values_to = 'num_cars', \n    cols = x2005:x2018) %&gt;%\n  separate(year, into = c('drop', 'year'), sep = 'x',\n           convert = TRUE) %&gt;% \n  select(-drop)\n\nhead(pc_sales, 3)\n\n#&gt; # A tibble: 3 √ó 3\n#&gt;   country  year num_cars\n#&gt;   &lt;chr&gt;   &lt;int&gt;    &lt;dbl&gt;\n#&gt; 1 AUSTRIA  2005   307915\n#&gt; 2 AUSTRIA  2006   308594\n#&gt; 3 AUSTRIA  2007   298182\n\n\n\n\nStrategy 1: Find another source\n\n\nStrategy 2: Hand-make it\n\npc_regions &lt;- read_csv(here::here(\n  \"data\", \"pc_regions.csv\"))\n\nhead(pc_regions)\n\n#&gt; # A tibble: 6 √ó 3\n#&gt;   country region subregion             \n#&gt;   &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt;                 \n#&gt; 1 AUSTRIA EUROPE EU 15 countries + EFTA\n#&gt; 2 BELGIUM EUROPE EU 15 countries + EFTA\n#&gt; 3 DENMARK EUROPE EU 15 countries + EFTA\n#&gt; 4 FINLAND EUROPE EU 15 countries + EFTA\n#&gt; 5 FRANCE  EUROPE EU 15 countries + EFTA\n#&gt; 6 GERMANY EUROPE EU 15 countries + EFTA\n\n\n\npc_sales &lt;- pc_sales %&gt;% \n  left_join(pc_regions) #&lt;&lt;\n\nhead(pc_sales)\n\n#&gt; # A tibble: 6 √ó 5\n#&gt;   country  year num_cars region subregion             \n#&gt;   &lt;chr&gt;   &lt;int&gt;    &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;                 \n#&gt; 1 AUSTRIA  2005   307915 EUROPE EU 15 countries + EFTA\n#&gt; 2 AUSTRIA  2006   308594 EUROPE EU 15 countries + EFTA\n#&gt; 3 AUSTRIA  2007   298182 EUROPE EU 15 countries + EFTA\n#&gt; 4 AUSTRIA  2008   293697 EUROPE EU 15 countries + EFTA\n#&gt; 5 AUSTRIA  2009   319403 EUROPE EU 15 countries + EFTA\n#&gt; 6 AUSTRIA  2010   328563 EUROPE EU 15 countries + EFTA\n\n\n\n\ndrop &lt;- c(\n  'EUROPE', 'EU 28 countries + EFTA',\n  'EU 15 countries + EFTA', 'EUROPE NEW MEMBERS',\n  'RUSSIA, TURKEY & OTHER EUROPE', 'AMERICA',\n  'NAFTA', 'CENTRAL & SOUTH AMERICA',\n  'ASIA/OCEANIA/MIDDLE EAST', 'AFRICA', 'ALL COUNTRIES')\n\npc_regions &lt;- read_csv(here::here(\"data\", \"pc_regions.csv\"))\n\npc_sales &lt;- read_excel(\n  here::here('data', 'pc_sales_2018.xlsx'),\n  sheet = 'pc_sales', skip = 5) %&gt;%\n  clean_names() %&gt;%\n  rename(country = regions_countries) %&gt;% \n  select(-c(x2:x4)) %&gt;%       # Drop bad columns\n  filter(! country %in% drop, # Drop bad rows\n         ! is.na(country)) %&gt;% \n  pivot_longer(\n    names_to = 'year', values_to = 'num_cars', \n    cols = x2005:x2018) %&gt;%\n  separate(year, into = c('drop', 'year'), sep = 'x',\n           convert = TRUE) %&gt;% \n  select(-drop) %&gt;% \n  left_join(pc_regions) %&gt;% \n  mutate(\n    country  = str_to_title(country), \n    region  = str_to_title(region), \n    subregion  = str_to_title(subregion))\n\nhead(pc_sales)\n\n#&gt; # A tibble: 6 √ó 5\n#&gt;   country  year num_cars region subregion             \n#&gt;   &lt;chr&gt;   &lt;int&gt;    &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;                 \n#&gt; 1 Austria  2005   307915 Europe Eu 15 Countries + Efta\n#&gt; 2 Austria  2006   308594 Europe Eu 15 Countries + Efta\n#&gt; 3 Austria  2007   298182 Europe Eu 15 Countries + Efta\n#&gt; 4 Austria  2008   293697 Europe Eu 15 Countries + Efta\n#&gt; 5 Austria  2009   319403 Europe Eu 15 Countries + Efta\n#&gt; 6 Austria  2010   328563 Europe Eu 15 Countries + Efta",
    "crumbs": [
      "Data Preparation",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Tidy Data</span>"
    ]
  },
  {
    "objectID": "good_prac_ch_5.html",
    "href": "good_prac_ch_5.html",
    "title": "5¬† Good Data Practices",
    "section": "",
    "text": "5.1 Data Provenance\nIt matters where you are getting your data. Think about:",
    "crumbs": [
      "Data Preparation",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Good Data Practices</span>"
    ]
  },
  {
    "objectID": "good_prac_ch_5.html#data-provenance",
    "href": "good_prac_ch_5.html#data-provenance",
    "title": "5¬† Good Data Practices",
    "section": "",
    "text": "Validity:\n\nIs this data trustworthy? Is it authentic?\nWhere did the data come from?\nHow has the data been changed / managed over time?\nIs the data complete?\n\nComprehension:\n\nIs this data accurate?\nCan you explain your results?\nIs this the right data to answer your question?\n\nReproducibility:\n\nPeople should be able to fully replicate your results from your raw data and code.",
    "crumbs": [
      "Data Preparation",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Good Data Practices</span>"
    ]
  },
  {
    "objectID": "good_prac_ch_5.html#documenting-data-sources",
    "href": "good_prac_ch_5.html#documenting-data-sources",
    "title": "5¬† Good Data Practices",
    "section": "5.2 Documenting Data Sources",
    "text": "5.2 Documenting Data Sources\nDocument your data source like a museum curator \nWhenever you download data, you should at a minimum record the following:\n\nThe name of the file you are describing.\nThe date you downloaded it.\nThe original name of the downloaded file (in case you renamed it).\nThe url to the site you downloaded it from.\nThe source of the original data (sometimes different from the site you downloaded it from).\nA short description of the data, maybe how they were collected (if available).\nA dictionary for the data (e.g.¬†a simple markdown table describing each variable).",
    "crumbs": [
      "Data Preparation",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Good Data Practices</span>"
    ]
  },
  {
    "objectID": "part_3.html",
    "href": "part_3.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Data Visualization\ntext",
    "crumbs": [
      "Data Visualization"
    ]
  },
  {
    "objectID": "sum_ch_6.html",
    "href": "sum_ch_6.html",
    "title": "6¬† Summarizing",
    "section": "",
    "text": "6.1 Summarizing\nChanges here",
    "crumbs": [
      "Data Visualization",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Summarizing</span>"
    ]
  },
  {
    "objectID": "effective_ch_7.html",
    "href": "effective_ch_7.html",
    "title": "7¬† Effective Charts",
    "section": "",
    "text": "7.1 Effective Charts\nChanges here",
    "crumbs": [
      "Data Visualization",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Effective Charts</span>"
    ]
  },
  {
    "objectID": "trends_ch_8.html",
    "href": "trends_ch_8.html",
    "title": "8¬† Plotting Trends",
    "section": "",
    "text": "8.1 Plotting Trends\nChanges here",
    "crumbs": [
      "Data Visualization",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Plotting Trends</span>"
    ]
  },
  {
    "objectID": "amounts_ch_9.html",
    "href": "amounts_ch_9.html",
    "title": "9¬† Amounts",
    "section": "",
    "text": "9.1 Amounts\nChanges here",
    "crumbs": [
      "Data Visualization",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>Amounts</span>"
    ]
  },
  {
    "objectID": "prop_ch_10.html",
    "href": "prop_ch_10.html",
    "title": "10¬† Proportions",
    "section": "",
    "text": "10.1 Proportions\nChanges here",
    "crumbs": [
      "Data Visualization",
      "<span class='chapter-number'>10</span>¬† <span class='chapter-title'>Proportions</span>"
    ]
  },
  {
    "objectID": "comparisons_ch_11.html",
    "href": "comparisons_ch_11.html",
    "title": "11¬† Comparisons",
    "section": "",
    "text": "11.1 Comparisons\nChanges here",
    "crumbs": [
      "Data Visualization",
      "<span class='chapter-number'>11</span>¬† <span class='chapter-title'>Comparisons</span>"
    ]
  },
  {
    "objectID": "maps_ch_12.html",
    "href": "maps_ch_12.html",
    "title": "12¬† Maps",
    "section": "",
    "text": "12.1 Maps\nChanges here",
    "crumbs": [
      "Data Visualization",
      "<span class='chapter-number'>12</span>¬† <span class='chapter-title'>Maps</span>"
    ]
  },
  {
    "objectID": "scales_ch_13.html",
    "href": "scales_ch_13.html",
    "title": "13¬† Adjusting Scales",
    "section": "",
    "text": "13.1 Adjusting Scales\nChanges here",
    "crumbs": [
      "Data Visualization",
      "<span class='chapter-number'>13</span>¬† <span class='chapter-title'>Adjusting Scales</span>"
    ]
  },
  {
    "objectID": "aesthetics_ch_14.html",
    "href": "aesthetics_ch_14.html",
    "title": "14¬† Plot Aesthetics",
    "section": "",
    "text": "14.1 Plot Aesthetics\nChanges here",
    "crumbs": [
      "Data Visualization",
      "<span class='chapter-number'>14</span>¬† <span class='chapter-title'>Plot Aesthetics</span>"
    ]
  },
  {
    "objectID": "anim_ch_15.html",
    "href": "anim_ch_15.html",
    "title": "15¬† Animation",
    "section": "",
    "text": "15.1 Animation\nChanges here",
    "crumbs": [
      "Data Visualization",
      "<span class='chapter-number'>15</span>¬† <span class='chapter-title'>Animation</span>"
    ]
  },
  {
    "objectID": "interact_ch_16.html",
    "href": "interact_ch_16.html",
    "title": "16¬† Interactivity",
    "section": "",
    "text": "16.1 Interactivity\nChanges here",
    "crumbs": [
      "Data Visualization",
      "<span class='chapter-number'>16</span>¬† <span class='chapter-title'>Interactivity</span>"
    ]
  }
]